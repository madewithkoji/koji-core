{
	"id": 0,
	"name": "@withkoji/core",
	"kind": 0,
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 367,
			"name": "backend",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 368,
					"name": "KojiBackend",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "backend/index.ts",
							"line": 8,
							"character": 24
						},
						{
							"fileName": "index.ts",
							"line": 3,
							"character": 20
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 369,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 370,
									"name": "Database",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "query",
										"queryType": {
											"type": "reference",
											"id": 52,
											"name": "Database"
										}
									}
								},
								{
									"id": 372,
									"name": "Dispatch",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "query",
										"queryType": {
											"type": "reference",
											"id": 201,
											"name": "Dispatch"
										}
									}
								},
								{
									"id": 371,
									"name": "IAP",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "query",
										"queryType": {
											"type": "reference",
											"id": 277,
											"name": "IAP"
										}
									}
								},
								{
									"id": 373,
									"name": "Identity",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "query",
										"queryType": {
											"type": "reference",
											"id": 349,
											"name": "Identity"
										}
									}
								},
								{
									"id": 374,
									"name": "Secret",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "query",
										"queryType": {
											"type": "reference",
											"id": 388,
											"name": "Secret"
										}
									}
								},
								{
									"id": 375,
									"name": "middleware",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 376,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 377,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 378,
															"name": "req",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Request"
															}
														},
														{
															"id": 379,
															"name": "res",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Response"
															}
														},
														{
															"id": 380,
															"name": "next",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "NextFunction"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										370,
										372,
										371,
										373,
										374,
										375
									]
								}
							]
						}
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						368
					]
				}
			],
			"sources": [
				{
					"fileName": "backend/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1,
			"name": "backend/@decorators/server",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2,
					"name": "server",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"decorates": [
						{
							"type": "reference",
							"id": 58,
							"name": "get"
						},
						{
							"type": "reference",
							"id": 63,
							"name": "getCollections"
						},
						{
							"type": "reference",
							"id": 65,
							"name": "search"
						},
						{
							"type": "reference",
							"id": 71,
							"name": "getWhere"
						},
						{
							"type": "reference",
							"id": 78,
							"name": "getAll"
						},
						{
							"type": "reference",
							"id": 83,
							"name": "getAllWhere"
						},
						{
							"type": "reference",
							"id": 90,
							"name": "set"
						},
						{
							"type": "reference",
							"id": 95,
							"name": "update"
						},
						{
							"type": "reference",
							"id": 100,
							"name": "arrayPush"
						},
						{
							"type": "reference",
							"id": 105,
							"name": "arrayRemove"
						},
						{
							"type": "reference",
							"id": 110,
							"name": "delete"
						},
						{
							"type": "reference",
							"id": 117,
							"name": "get"
						},
						{
							"type": "reference",
							"id": 122,
							"name": "getCollections"
						},
						{
							"type": "reference",
							"id": 124,
							"name": "search"
						},
						{
							"type": "reference",
							"id": 130,
							"name": "getWhere"
						},
						{
							"type": "reference",
							"id": 137,
							"name": "getAll"
						},
						{
							"type": "reference",
							"id": 142,
							"name": "getAllWhere"
						},
						{
							"type": "reference",
							"id": 149,
							"name": "set"
						},
						{
							"type": "reference",
							"id": 154,
							"name": "update"
						},
						{
							"type": "reference",
							"id": 159,
							"name": "arrayPush"
						},
						{
							"type": "reference",
							"id": 164,
							"name": "arrayRemove"
						},
						{
							"type": "reference",
							"id": 169,
							"name": "delete"
						},
						{
							"type": "reference",
							"id": 285,
							"name": "resolveReceiptsByUserToken"
						},
						{
							"type": "reference",
							"id": 288,
							"name": "resolveReceiptById"
						},
						{
							"type": "reference",
							"id": 291,
							"name": "resolveReceiptsBySku"
						},
						{
							"type": "reference",
							"id": 306,
							"name": "resolveReceiptsByUserToken"
						},
						{
							"type": "reference",
							"id": 309,
							"name": "resolveReceiptById"
						},
						{
							"type": "reference",
							"id": 312,
							"name": "resolveReceiptsBySku"
						},
						{
							"type": "reference",
							"id": 355,
							"name": "pushNotificationToUser"
						},
						{
							"type": "reference",
							"id": 359,
							"name": "pushNotificationToOwner"
						},
						{
							"type": "reference",
							"id": 362,
							"name": "resolveUserFromToken"
						},
						{
							"type": "reference",
							"id": 394,
							"name": "resolveValue"
						},
						{
							"type": "reference",
							"id": 398,
							"name": "generateSignedUrl"
						}
					],
					"sources": [
						{
							"fileName": "backend/@decorators/server.ts",
							"line": 9,
							"character": 22
						}
					],
					"signatures": [
						{
							"id": 3,
							"name": "server",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Verifies that server-side methods are used only in backend services of the Koji.",
								"returns": "Method's behavior or an error, if the method is being invoked in a frontend environment.\n"
							},
							"parameters": [
								{
									"id": 4,
									"name": "target",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Class to which the method belongs."
									},
									"type": {
										"type": "reference",
										"name": "Object"
									}
								},
								{
									"id": 5,
									"name": "propertyKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Method name."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 6,
									"name": "descriptor",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Method's behavior (which can be mutated inside this function)."
									},
									"type": {
										"type": "reference",
										"name": "PropertyDescriptor"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						2
					]
				}
			],
			"sources": [
				{
					"fileName": "backend/@decorators/server.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 8,
			"name": "backend/base",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 19,
					"name": "Base",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 20,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 21,
									"name": "new Base",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 22,
											"name": "config",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 12,
												"name": "BackendConfigurationInput"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 19,
										"name": "Base"
									}
								}
							]
						},
						{
							"id": 23,
							"name": "projectId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "backend/base/index.ts",
									"line": 50,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 24,
							"name": "projectToken",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "backend/base/index.ts",
									"line": 51,
									"character": 24
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								20
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								23,
								24
							]
						}
					],
					"sources": [
						{
							"fileName": "backend/base/index.ts",
							"line": 49,
							"character": 17
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 25,
							"name": "IDatabase"
						},
						{
							"type": "reference",
							"id": 52,
							"name": "Database"
						},
						{
							"type": "reference",
							"id": 201,
							"name": "Dispatch"
						},
						{
							"type": "reference",
							"id": 349,
							"name": "Identity"
						},
						{
							"type": "reference",
							"id": 388,
							"name": "Secret"
						}
					]
				},
				{
					"id": 16,
					"name": "BackendConfiguration",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 17,
							"name": "projectId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/base/index.ts",
									"line": 10,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 18,
							"name": "projectToken",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/base/index.ts",
									"line": 11,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								17,
								18
							]
						}
					],
					"sources": [
						{
							"fileName": "backend/base/index.ts",
							"line": 9,
							"character": 37
						}
					]
				},
				{
					"id": 12,
					"name": "BackendConfigurationInput",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 13,
							"name": "projectId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "backend/base/index.ts",
									"line": 4,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 14,
							"name": "projectToken",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "backend/base/index.ts",
									"line": 5,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 15,
							"name": "res",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "backend/base/index.ts",
									"line": 6,
									"character": 5
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Record"
											}
										],
										"name": "Response"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								13,
								14,
								15
							]
						}
					],
					"sources": [
						{
							"fileName": "backend/base/index.ts",
							"line": 3,
							"character": 42
						}
					]
				},
				{
					"id": 25,
					"name": "IDatabase",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 26,
							"name": "projectId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "backend/base/index.ts",
									"line": 50,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 23,
								"name": "Base.projectId"
							}
						},
						{
							"id": 27,
							"name": "projectToken",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "backend/base/index.ts",
									"line": 51,
									"character": 24
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 24,
								"name": "Base.projectToken"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								26,
								27
							]
						}
					],
					"sources": [
						{
							"fileName": "backend/base/index.ts",
							"line": 61,
							"character": 26
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 19,
							"name": "Base"
						}
					]
				},
				{
					"id": 9,
					"name": "generateConfig",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "backend/base/index.ts",
							"line": 21,
							"character": 30
						}
					],
					"signatures": [
						{
							"id": 10,
							"name": "generateConfig",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Extensibly generate a project configuration"
							},
							"parameters": [
								{
									"id": 11,
									"name": "config",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Information about the project"
									},
									"type": {
										"type": "reference",
										"id": 12,
										"name": "BackendConfigurationInput"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 16,
								"name": "BackendConfiguration"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						19
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						16,
						12,
						25
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						9
					]
				}
			],
			"sources": [
				{
					"fileName": "backend/base/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 7,
			"name": "backend/base/index.spec",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"sources": [
				{
					"fileName": "backend/base/index.spec.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 29,
			"name": "backend/database",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 30,
					"name": "DatabaseRoutes",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"children": [
						{
							"id": 31,
							"name": "ARRAY_PUSH",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/database/index.ts",
									"line": 6,
									"character": 12
								}
							],
							"defaultValue": "\"/v1/store/update/push\""
						},
						{
							"id": 32,
							"name": "ARRAY_REMOVE",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/database/index.ts",
									"line": 7,
									"character": 14
								}
							],
							"defaultValue": "\"/v1/store/update/remove\""
						},
						{
							"id": 33,
							"name": "DELETE",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/database/index.ts",
									"line": 8,
									"character": 8
								}
							],
							"defaultValue": "\"/v1/store/delete\""
						},
						{
							"id": 34,
							"name": "GET",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/database/index.ts",
									"line": 9,
									"character": 5
								}
							],
							"defaultValue": "\"/v1/store/get\""
						},
						{
							"id": 35,
							"name": "GET_ALL",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/database/index.ts",
									"line": 10,
									"character": 9
								}
							],
							"defaultValue": "\"/v1/store/getAll\""
						},
						{
							"id": 36,
							"name": "GET_ALL_WHERE",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/database/index.ts",
									"line": 11,
									"character": 15
								}
							],
							"defaultValue": "\"/v1/store/getAllWhere\""
						},
						{
							"id": 37,
							"name": "GET_COLLECTIONS",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/database/index.ts",
									"line": 12,
									"character": 17
								}
							],
							"defaultValue": "\"/v1/store/getCollections\""
						},
						{
							"id": 38,
							"name": "SEARCH",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/database/index.ts",
									"line": 13,
									"character": 8
								}
							],
							"defaultValue": "\"/v1/store/search\""
						},
						{
							"id": 39,
							"name": "SET",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/database/index.ts",
									"line": 14,
									"character": 5
								}
							],
							"defaultValue": "\"/v1/store/set\""
						},
						{
							"id": 40,
							"name": "UPDATE",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/database/index.ts",
									"line": 15,
									"character": 8
								}
							],
							"defaultValue": "\"/v1/store/update\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								31,
								32,
								33,
								34,
								35,
								36,
								37,
								38,
								39,
								40
							]
						}
					],
					"sources": [
						{
							"fileName": "backend/database/index.ts",
							"line": 5,
							"character": 26
						}
					]
				},
				{
					"id": 41,
					"name": "PredicateOperator",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"children": [
						{
							"id": 48,
							"name": "ARRAY_CONTAINS",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/database/index.ts",
									"line": 25,
									"character": 16
								}
							],
							"defaultValue": "\"array-contains\""
						},
						{
							"id": 49,
							"name": "ARRAY_CONTAINS_ANY",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/database/index.ts",
									"line": 26,
									"character": 20
								}
							],
							"defaultValue": "\"array-contains-any\""
						},
						{
							"id": 44,
							"name": "EQUAL_TO",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/database/index.ts",
									"line": 21,
									"character": 10
								}
							],
							"defaultValue": "\"==\""
						},
						{
							"id": 45,
							"name": "GREATER_THAN",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/database/index.ts",
									"line": 22,
									"character": 14
								}
							],
							"defaultValue": "\">\""
						},
						{
							"id": 46,
							"name": "GREATER_THAN_OR_EQUAL_TO",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/database/index.ts",
									"line": 23,
									"character": 26
								}
							],
							"defaultValue": "\">=\""
						},
						{
							"id": 50,
							"name": "IN",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/database/index.ts",
									"line": 27,
									"character": 4
								}
							],
							"defaultValue": "\"in\""
						},
						{
							"id": 42,
							"name": "LESS_THAN",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/database/index.ts",
									"line": 19,
									"character": 11
								}
							],
							"defaultValue": "\"<\""
						},
						{
							"id": 43,
							"name": "LESS_THAN_OR_EQUAL_TO",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/database/index.ts",
									"line": 20,
									"character": 23
								}
							],
							"defaultValue": "\"<=\""
						},
						{
							"id": 47,
							"name": "NOT_EQUAL_TO",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/database/index.ts",
									"line": 24,
									"character": 14
								}
							],
							"defaultValue": "\"!=\""
						},
						{
							"id": 51,
							"name": "NOT_IN",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/database/index.ts",
									"line": 28,
									"character": 8
								}
							],
							"defaultValue": "\"not-in\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								48,
								49,
								44,
								45,
								46,
								50,
								42,
								43,
								47,
								51
							]
						}
					],
					"sources": [
						{
							"fileName": "backend/database/index.ts",
							"line": 18,
							"character": 29
						}
					]
				},
				{
					"id": 52,
					"name": "Database",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 53,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 54,
									"name": "new Database",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 55,
											"name": "config",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 12,
												"name": "BackendConfigurationInput"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 52,
										"name": "Database"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 21,
										"name": "Base.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 20,
								"name": "Base.constructor"
							}
						},
						{
							"id": 114,
							"name": "projectId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "backend/base/index.ts",
									"line": 50,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 23,
								"name": "Base.projectId"
							}
						},
						{
							"id": 115,
							"name": "projectToken",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "backend/base/index.ts",
									"line": 51,
									"character": 24
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 24,
								"name": "Base.projectToken"
							}
						},
						{
							"id": 57,
							"name": "rootHeaders",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "backend/database/index.ts",
									"line": 33,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "Object"
							}
						},
						{
							"id": 56,
							"name": "rootPath",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "backend/database/index.ts",
									"line": 32,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 100,
							"name": "arrayPush",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"decorators": [
								{
									"name": "server",
									"type": {
										"type": "reference",
										"id": 2,
										"name": "server"
									}
								}
							],
							"sources": [
								{
									"fileName": "backend/database/index.ts",
									"line": 173,
									"character": 24
								}
							],
							"signatures": [
								{
									"id": 101,
									"name": "arrayPush",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 102,
											"name": "collection",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 103,
											"name": "documentName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 104,
											"name": "documentBody",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "intrinsic",
														"name": "void"
													}
												]
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 105,
							"name": "arrayRemove",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"decorators": [
								{
									"name": "server",
									"type": {
										"type": "reference",
										"id": 2,
										"name": "server"
									}
								}
							],
							"sources": [
								{
									"fileName": "backend/database/index.ts",
									"line": 188,
									"character": 26
								}
							],
							"signatures": [
								{
									"id": 106,
									"name": "arrayRemove",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 107,
											"name": "collection",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 108,
											"name": "documentName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 109,
											"name": "documentBody",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "intrinsic",
														"name": "void"
													}
												]
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 110,
							"name": "delete",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"decorators": [
								{
									"name": "server",
									"type": {
										"type": "reference",
										"id": 2,
										"name": "server"
									}
								}
							],
							"sources": [
								{
									"fileName": "backend/database/index.ts",
									"line": 203,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 111,
									"name": "delete",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 112,
											"name": "collection",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 113,
											"name": "documentName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "intrinsic",
														"name": "void"
													}
												]
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 58,
							"name": "get",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"decorators": [
								{
									"name": "server",
									"type": {
										"type": "reference",
										"id": 2,
										"name": "server"
									}
								}
							],
							"sources": [
								{
									"fileName": "backend/database/index.ts",
									"line": 48,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 59,
									"name": "get",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 60,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 61,
											"name": "collection",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 62,
											"name": "documentName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "T"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 78,
							"name": "getAll",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"decorators": [
								{
									"name": "server",
									"type": {
										"type": "reference",
										"id": 2,
										"name": "server"
									}
								}
							],
							"sources": [
								{
									"fileName": "backend/database/index.ts",
									"line": 108,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 79,
									"name": "getAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 80,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 81,
											"name": "collection",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 82,
											"name": "documentNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "T"
												}
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 83,
							"name": "getAllWhere",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"decorators": [
								{
									"name": "server",
									"type": {
										"type": "reference",
										"id": 2,
										"name": "server"
									}
								}
							],
							"sources": [
								{
									"fileName": "backend/database/index.ts",
									"line": 122,
									"character": 26
								}
							],
							"signatures": [
								{
									"id": 84,
									"name": "getAllWhere",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 85,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 86,
											"name": "collection",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 87,
											"name": "predicateKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 88,
											"name": "predicateOperation",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 41,
												"name": "PredicateOperator"
											}
										},
										{
											"id": 89,
											"name": "predicateValues",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "T"
												}
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 63,
							"name": "getCollections",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"decorators": [
								{
									"name": "server",
									"type": {
										"type": "reference",
										"id": 2,
										"name": "server"
									}
								}
							],
							"sources": [
								{
									"fileName": "backend/database/index.ts",
									"line": 61,
									"character": 29
								}
							],
							"signatures": [
								{
									"id": 64,
									"name": "getCollections",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 71,
							"name": "getWhere",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"decorators": [
								{
									"name": "server",
									"type": {
										"type": "reference",
										"id": 2,
										"name": "server"
									}
								}
							],
							"sources": [
								{
									"fileName": "backend/database/index.ts",
									"line": 85,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 72,
									"name": "getWhere",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 73,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 74,
											"name": "collection",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 75,
											"name": "predicateKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 76,
											"name": "predicateOperation",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 41,
												"name": "PredicateOperator"
											}
										},
										{
											"id": 77,
											"name": "predicateValue",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "T"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 65,
							"name": "search",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"decorators": [
								{
									"name": "server",
									"type": {
										"type": "reference",
										"id": 2,
										"name": "server"
									}
								}
							],
							"sources": [
								{
									"fileName": "backend/database/index.ts",
									"line": 70,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 66,
									"name": "search",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 67,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 68,
											"name": "collection",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 69,
											"name": "queryKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 70,
											"name": "queryValue",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "T"
												}
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 90,
							"name": "set",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"decorators": [
								{
									"name": "server",
									"type": {
										"type": "reference",
										"id": 2,
										"name": "server"
									}
								}
							],
							"sources": [
								{
									"fileName": "backend/database/index.ts",
									"line": 143,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 91,
									"name": "set",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 92,
											"name": "collection",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 93,
											"name": "documentName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 94,
											"name": "documentBody",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 95,
							"name": "update",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"decorators": [
								{
									"name": "server",
									"type": {
										"type": "reference",
										"id": 2,
										"name": "server"
									}
								}
							],
							"sources": [
								{
									"fileName": "backend/database/index.ts",
									"line": 158,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 96,
									"name": "update",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 97,
											"name": "collection",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 98,
											"name": "documentName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 99,
											"name": "documentBody",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "intrinsic",
														"name": "void"
													}
												]
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								53
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								114,
								115,
								57,
								56
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								100,
								105,
								110,
								58,
								78,
								83,
								63,
								71,
								65,
								90,
								95
							]
						}
					],
					"sources": [
						{
							"fileName": "backend/database/index.ts",
							"line": 31,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 19,
							"name": "Base"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 116,
							"name": "IDatabase"
						}
					]
				},
				{
					"id": 116,
					"name": "IDatabase",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 173,
							"name": "projectId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "backend/base/index.ts",
									"line": 50,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 114,
								"name": "Database.projectId"
							}
						},
						{
							"id": 174,
							"name": "projectToken",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "backend/base/index.ts",
									"line": 51,
									"character": 24
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 115,
								"name": "Database.projectToken"
							}
						},
						{
							"id": 159,
							"name": "arrayPush",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"decorators": [
								{
									"name": "server",
									"type": {
										"type": "reference",
										"id": 2,
										"name": "server"
									}
								}
							],
							"sources": [
								{
									"fileName": "backend/database/index.ts",
									"line": 173,
									"character": 24
								}
							],
							"signatures": [
								{
									"id": 160,
									"name": "arrayPush",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 161,
											"name": "collection",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 162,
											"name": "documentName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 163,
											"name": "documentBody",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "intrinsic",
														"name": "void"
													}
												]
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 101,
										"name": "Database.arrayPush"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 100,
								"name": "Database.arrayPush"
							}
						},
						{
							"id": 164,
							"name": "arrayRemove",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"decorators": [
								{
									"name": "server",
									"type": {
										"type": "reference",
										"id": 2,
										"name": "server"
									}
								}
							],
							"sources": [
								{
									"fileName": "backend/database/index.ts",
									"line": 188,
									"character": 26
								}
							],
							"signatures": [
								{
									"id": 165,
									"name": "arrayRemove",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 166,
											"name": "collection",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 167,
											"name": "documentName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 168,
											"name": "documentBody",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "intrinsic",
														"name": "void"
													}
												]
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 106,
										"name": "Database.arrayRemove"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 105,
								"name": "Database.arrayRemove"
							}
						},
						{
							"id": 169,
							"name": "delete",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"decorators": [
								{
									"name": "server",
									"type": {
										"type": "reference",
										"id": 2,
										"name": "server"
									}
								}
							],
							"sources": [
								{
									"fileName": "backend/database/index.ts",
									"line": 203,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 170,
									"name": "delete",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 171,
											"name": "collection",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 172,
											"name": "documentName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "intrinsic",
														"name": "void"
													}
												]
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 111,
										"name": "Database.delete"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 110,
								"name": "Database.delete"
							}
						},
						{
							"id": 117,
							"name": "get",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"decorators": [
								{
									"name": "server",
									"type": {
										"type": "reference",
										"id": 2,
										"name": "server"
									}
								}
							],
							"sources": [
								{
									"fileName": "backend/database/index.ts",
									"line": 48,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 118,
									"name": "get",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 119,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 120,
											"name": "collection",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 121,
											"name": "documentName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "T"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 59,
										"name": "Database.get"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 58,
								"name": "Database.get"
							}
						},
						{
							"id": 137,
							"name": "getAll",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"decorators": [
								{
									"name": "server",
									"type": {
										"type": "reference",
										"id": 2,
										"name": "server"
									}
								}
							],
							"sources": [
								{
									"fileName": "backend/database/index.ts",
									"line": 108,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 138,
									"name": "getAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 139,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 140,
											"name": "collection",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 141,
											"name": "documentNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "T"
												}
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 79,
										"name": "Database.getAll"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 78,
								"name": "Database.getAll"
							}
						},
						{
							"id": 142,
							"name": "getAllWhere",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"decorators": [
								{
									"name": "server",
									"type": {
										"type": "reference",
										"id": 2,
										"name": "server"
									}
								}
							],
							"sources": [
								{
									"fileName": "backend/database/index.ts",
									"line": 122,
									"character": 26
								}
							],
							"signatures": [
								{
									"id": 143,
									"name": "getAllWhere",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 144,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 145,
											"name": "collection",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 146,
											"name": "predicateKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 147,
											"name": "predicateOperation",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 41,
												"name": "PredicateOperator"
											}
										},
										{
											"id": 148,
											"name": "predicateValues",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "T"
												}
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 84,
										"name": "Database.getAllWhere"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 83,
								"name": "Database.getAllWhere"
							}
						},
						{
							"id": 122,
							"name": "getCollections",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"decorators": [
								{
									"name": "server",
									"type": {
										"type": "reference",
										"id": 2,
										"name": "server"
									}
								}
							],
							"sources": [
								{
									"fileName": "backend/database/index.ts",
									"line": 61,
									"character": 29
								}
							],
							"signatures": [
								{
									"id": 123,
									"name": "getCollections",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 64,
										"name": "Database.getCollections"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 63,
								"name": "Database.getCollections"
							}
						},
						{
							"id": 130,
							"name": "getWhere",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"decorators": [
								{
									"name": "server",
									"type": {
										"type": "reference",
										"id": 2,
										"name": "server"
									}
								}
							],
							"sources": [
								{
									"fileName": "backend/database/index.ts",
									"line": 85,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 131,
									"name": "getWhere",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 132,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 133,
											"name": "collection",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 134,
											"name": "predicateKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 135,
											"name": "predicateOperation",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 41,
												"name": "PredicateOperator"
											}
										},
										{
											"id": 136,
											"name": "predicateValue",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "T"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 72,
										"name": "Database.getWhere"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 71,
								"name": "Database.getWhere"
							}
						},
						{
							"id": 124,
							"name": "search",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"decorators": [
								{
									"name": "server",
									"type": {
										"type": "reference",
										"id": 2,
										"name": "server"
									}
								}
							],
							"sources": [
								{
									"fileName": "backend/database/index.ts",
									"line": 70,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 125,
									"name": "search",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 126,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 127,
											"name": "collection",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 128,
											"name": "queryKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 129,
											"name": "queryValue",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "T"
												}
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 66,
										"name": "Database.search"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 65,
								"name": "Database.search"
							}
						},
						{
							"id": 149,
							"name": "set",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"decorators": [
								{
									"name": "server",
									"type": {
										"type": "reference",
										"id": 2,
										"name": "server"
									}
								}
							],
							"sources": [
								{
									"fileName": "backend/database/index.ts",
									"line": 143,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 150,
									"name": "set",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 151,
											"name": "collection",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 152,
											"name": "documentName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 153,
											"name": "documentBody",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 91,
										"name": "Database.set"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 90,
								"name": "Database.set"
							}
						},
						{
							"id": 154,
							"name": "update",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"decorators": [
								{
									"name": "server",
									"type": {
										"type": "reference",
										"id": 2,
										"name": "server"
									}
								}
							],
							"sources": [
								{
									"fileName": "backend/database/index.ts",
									"line": 158,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 155,
									"name": "update",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 156,
											"name": "collection",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 157,
											"name": "documentName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 158,
											"name": "documentBody",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "intrinsic",
														"name": "void"
													}
												]
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 96,
										"name": "Database.update"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 95,
								"name": "Database.update"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								173,
								174
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								159,
								164,
								169,
								117,
								137,
								142,
								122,
								130,
								124,
								149,
								154
							]
						}
					],
					"sources": [
						{
							"fileName": "backend/database/index.ts",
							"line": 217,
							"character": 26
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 52,
							"name": "Database"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						30,
						41
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						52
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						116
					]
				}
			],
			"sources": [
				{
					"fileName": "backend/database/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 28,
			"name": "backend/database/index.spec",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"sources": [
				{
					"fileName": "backend/database/index.spec.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 175,
			"name": "backend/dispatch",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 176,
					"name": "PlatformEvents",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"children": [
						{
							"id": 177,
							"name": "CONNECTED",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/dispatch/index.ts",
									"line": 25,
									"character": 11
								}
							],
							"defaultValue": "\"@@KOJI_DISPATCH/CONNECTED\""
						},
						{
							"id": 178,
							"name": "CONNECTED_CLIENTS_CHANGED",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/dispatch/index.ts",
									"line": 26,
									"character": 27
								}
							],
							"defaultValue": "\"@@KOJI_DISPATCH/CONNECTED_CLIENTS_CHANGED\""
						},
						{
							"id": 179,
							"name": "IDENTIFY",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/dispatch/index.ts",
									"line": 27,
									"character": 10
								}
							],
							"defaultValue": "\"@@KOJI_DISPATCH/IDENTIFY\""
						},
						{
							"id": 180,
							"name": "SET_USER_INFO",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/dispatch/index.ts",
									"line": 28,
									"character": 15
								}
							],
							"defaultValue": "\"@@KOJI_DISPATCH/SET_USER_INFO\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								177,
								178,
								179,
								180
							]
						}
					],
					"sources": [
						{
							"fileName": "backend/dispatch/index.ts",
							"line": 24,
							"character": 26
						}
					]
				},
				{
					"id": 201,
					"name": "Dispatch",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 202,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 203,
									"name": "new Dispatch",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 204,
											"name": "config",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DispatchConfigurationInput"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 201,
										"name": "Dispatch"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 21,
										"name": "Base.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 20,
								"name": "Base.constructor"
							}
						},
						{
							"id": 205,
							"name": "authToken",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "backend/dispatch/index.ts",
									"line": 50,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 209,
							"name": "eventHandlers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "backend/dispatch/index.ts",
									"line": 55,
									"character": 23
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 181,
									"name": "MessageHandler"
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 207,
							"name": "initialConnection",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "backend/dispatch/index.ts",
									"line": 53,
									"character": 27
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 208,
							"name": "isConnected",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "backend/dispatch/index.ts",
									"line": 54,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 210,
							"name": "messageQueue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "backend/dispatch/index.ts",
									"line": 56,
									"character": 22
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 254,
							"name": "projectId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "backend/base/index.ts",
									"line": 50,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 23,
								"name": "Base.projectId"
							}
						},
						{
							"id": 255,
							"name": "projectToken",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "backend/base/index.ts",
									"line": 51,
									"character": 24
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 24,
								"name": "Base.projectToken"
							}
						},
						{
							"id": 206,
							"name": "url",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "backend/dispatch/index.ts",
									"line": 51,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 211,
							"name": "ws",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "backend/dispatch/index.ts",
									"line": 57,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"name": "default"
									}
								]
							},
							"defaultValue": "null"
						},
						{
							"id": 214,
							"name": "connect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "backend/dispatch/index.ts",
									"line": 86,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 215,
									"name": "connect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 198,
												"name": "ConnectionInfo"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 252,
							"name": "disconnect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "backend/dispatch/index.ts",
									"line": 196,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 253,
									"name": "disconnect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 244,
							"name": "emitEvent",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "backend/dispatch/index.ts",
									"line": 170,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 245,
									"name": "emitEvent",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 246,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 247,
											"name": "payload",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 248,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 249,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 250,
																"name": "index",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											}
										},
										{
											"id": 251,
											"name": "recipients",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 226,
							"name": "handleClose",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "backend/dispatch/index.ts",
									"line": 138,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 227,
									"name": "handleClose",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 228,
							"name": "handleError",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "backend/dispatch/index.ts",
									"line": 142,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 229,
									"name": "handleError",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 230,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Event"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 224,
							"name": "handleMaximum",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "backend/dispatch/index.ts",
									"line": 136,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 225,
									"name": "handleMaximum",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 216,
							"name": "handleMessage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "backend/dispatch/index.ts",
									"line": 105,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 217,
									"name": "handleMessage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 218,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 219,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 220,
															"name": "data",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "backend/dispatch/index.ts",
																	"line": 105,
																	"character": 40
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																220
															]
														}
													]
												}
											}
										},
										{
											"id": 221,
											"name": "resolve",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Function"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 222,
							"name": "handleReconnect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "backend/dispatch/index.ts",
									"line": 126,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 223,
									"name": "handleReconnect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 241,
							"name": "identify",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "backend/dispatch/index.ts",
									"line": 164,
									"character": 17
								}
							],
							"signatures": [
								{
									"id": 242,
									"name": "identify",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 243,
											"name": "authToken",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 212,
							"name": "info",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "backend/dispatch/index.ts",
									"line": 81,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 213,
									"name": "info",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 195,
													"name": "ShardInfo"
												}
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 231,
							"name": "on",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "backend/dispatch/index.ts",
									"line": 146,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 232,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 233,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 234,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 185,
												"name": "MessageHandlerCallback"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Function"
									}
								}
							]
						},
						{
							"id": 235,
							"name": "setUserInfo",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "backend/dispatch/index.ts",
									"line": 160,
									"character": 20
								}
							],
							"signatures": [
								{
									"id": 236,
									"name": "setUserInfo",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 237,
											"name": "userInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 238,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 239,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 240,
																"name": "index",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								202
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								205,
								209,
								207,
								208,
								210,
								254,
								255,
								206,
								211
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								214,
								252,
								244,
								226,
								228,
								224,
								216,
								222,
								241,
								212,
								231,
								235
							]
						}
					],
					"sources": [
						{
							"fileName": "backend/dispatch/index.ts",
							"line": 49,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 19,
							"name": "Base"
						}
					]
				},
				{
					"id": 198,
					"name": "ConnectionInfo",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 199,
							"name": "clientId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "backend/dispatch/index.ts",
									"line": 45,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 200,
							"name": "shardName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/dispatch/index.ts",
									"line": 46,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								199,
								200
							]
						}
					],
					"sources": [
						{
							"fileName": "backend/dispatch/index.ts",
							"line": 44,
							"character": 31
						}
					]
				},
				{
					"id": 181,
					"name": "MessageHandler",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 184,
							"name": "callback",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/dispatch/index.ts",
									"line": 34,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 185,
								"name": "MessageHandlerCallback"
							}
						},
						{
							"id": 183,
							"name": "eventName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/dispatch/index.ts",
									"line": 33,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 182,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/dispatch/index.ts",
									"line": 32,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								184,
								183,
								182
							]
						}
					],
					"sources": [
						{
							"fileName": "backend/dispatch/index.ts",
							"line": 31,
							"character": 31
						}
					]
				},
				{
					"id": 195,
					"name": "ShardInfo",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 197,
							"name": "numConnectedClients",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/dispatch/index.ts",
									"line": 41,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 196,
							"name": "shardName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/dispatch/index.ts",
									"line": 40,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								197,
								196
							]
						}
					],
					"sources": [
						{
							"fileName": "backend/dispatch/index.ts",
							"line": 39,
							"character": 26
						}
					]
				},
				{
					"id": 185,
					"name": "MessageHandlerCallback",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "backend/dispatch/index.ts",
							"line": 37,
							"character": 34
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 186,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/dispatch/index.ts",
									"line": 37,
									"character": 36
								}
							],
							"signatures": [
								{
									"id": 187,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 188,
											"name": "payload",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 189,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "backend/dispatch/index.ts",
															"line": 37,
															"character": 46
														}
													],
													"indexSignature": {
														"id": 190,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 191,
																"name": "index",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											}
										},
										{
											"id": 192,
											"name": "metadata",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 193,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 194,
															"name": "latencyMs",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "backend/dispatch/index.ts",
																	"line": 37,
																	"character": 94
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																194
															]
														}
													],
													"sources": [
														{
															"fileName": "backend/dispatch/index.ts",
															"line": 37,
															"character": 82
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						176
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						201
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						198,
						181,
						195
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						185
					]
				}
			],
			"sources": [
				{
					"fileName": "backend/dispatch/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 256,
			"name": "backend/iap",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 257,
					"name": "IapRoutes",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"children": [
						{
							"id": 258,
							"name": "GET_PRODUCT_BY_SKU",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/iap/index.ts",
									"line": 6,
									"character": 20
								}
							],
							"defaultValue": "\"/v1/iap/provider/getProductBySku\""
						},
						{
							"id": 259,
							"name": "RESOLVE_RECEIPTS",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/iap/index.ts",
									"line": 7,
									"character": 18
								}
							],
							"defaultValue": "\"/v1/iap/consumer/resolveReceipts\""
						},
						{
							"id": 261,
							"name": "RESOLVE_RECEIPTS_BY_SKU",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/iap/index.ts",
									"line": 9,
									"character": 25
								}
							],
							"defaultValue": "\"/v1/iap/consumer/resolveReceiptsBySku\""
						},
						{
							"id": 260,
							"name": "RESOLVE_RECEIPT_BY_ID",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/iap/index.ts",
									"line": 8,
									"character": 23
								}
							],
							"defaultValue": "\"/v1/iap/consumer/resolveReceiptById\""
						},
						{
							"id": 262,
							"name": "UPDATE_RECEIPT",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/iap/index.ts",
									"line": 10,
									"character": 16
								}
							],
							"defaultValue": "\"/v1/iap/consumer/updateReceiptAttributes\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								258,
								259,
								261,
								260,
								262
							]
						}
					],
					"sources": [
						{
							"fileName": "backend/iap/index.ts",
							"line": 5,
							"character": 21
						}
					]
				},
				{
					"id": 277,
					"name": "IAP",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 278,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 279,
									"name": "new IAP",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 280,
											"name": "res",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record"
													}
												],
												"name": "Response"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 277,
										"name": "IAP"
									}
								}
							]
						},
						{
							"id": 281,
							"name": "projectId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "backend/iap/index.ts",
									"line": 28,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 282,
							"name": "projectToken",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "backend/iap/index.ts",
									"line": 29,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 284,
							"name": "rootHeaders",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "backend/iap/index.ts",
									"line": 31,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "Object"
							}
						},
						{
							"id": 283,
							"name": "rootPath",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "backend/iap/index.ts",
									"line": 30,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 302,
							"name": "loadProduct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "backend/iap/index.ts",
									"line": 118,
									"character": 26
								}
							],
							"signatures": [
								{
									"id": 303,
									"name": "loadProduct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 304,
											"name": "sku",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 288,
							"name": "resolveReceiptById",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"decorators": [
								{
									"name": "server",
									"type": {
										"type": "reference",
										"id": 2,
										"name": "server"
									}
								}
							],
							"sources": [
								{
									"fileName": "backend/iap/index.ts",
									"line": 67,
									"character": 33
								}
							],
							"signatures": [
								{
									"id": 289,
									"name": "resolveReceiptById",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 290,
											"name": "receiptId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 264,
														"name": "IapReceipt"
													}
												]
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 291,
							"name": "resolveReceiptsBySku",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"decorators": [
								{
									"name": "server",
									"type": {
										"type": "reference",
										"id": 2,
										"name": "server"
									}
								}
							],
							"sources": [
								{
									"fileName": "backend/iap/index.ts",
									"line": 82,
									"character": 35
								}
							],
							"signatures": [
								{
									"id": 292,
									"name": "resolveReceiptsBySku",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 293,
											"name": "sku",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 264,
													"name": "IapReceipt"
												}
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 285,
							"name": "resolveReceiptsByUserToken",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"decorators": [
								{
									"name": "server",
									"type": {
										"type": "reference",
										"id": 2,
										"name": "server"
									}
								}
							],
							"sources": [
								{
									"fileName": "backend/iap/index.ts",
									"line": 47,
									"character": 41
								}
							],
							"signatures": [
								{
									"id": 286,
									"name": "resolveReceiptsByUserToken",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 287,
											"name": "userToken",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 264,
													"name": "IapReceipt"
												}
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 294,
							"name": "updateReceipt",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "backend/iap/index.ts",
									"line": 96,
									"character": 28
								}
							],
							"signatures": [
								{
									"id": 295,
									"name": "updateReceipt",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 296,
											"name": "receiptId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 297,
											"name": "attributes",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 298,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 299,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 300,
																"name": "index",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											}
										},
										{
											"id": 301,
											"name": "notificationMessage",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								278
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								281,
								282,
								284,
								283
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								302,
								288,
								291,
								285,
								294
							]
						}
					],
					"sources": [
						{
							"fileName": "backend/iap/index.ts",
							"line": 27,
							"character": 16
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 305,
							"name": "IIAP"
						}
					]
				},
				{
					"id": 305,
					"name": "IIAP",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 323,
							"name": "loadProduct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "backend/iap/index.ts",
									"line": 118,
									"character": 26
								}
							],
							"signatures": [
								{
									"id": 324,
									"name": "loadProduct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 325,
											"name": "sku",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 303,
										"name": "IAP.loadProduct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 302,
								"name": "IAP.loadProduct"
							}
						},
						{
							"id": 309,
							"name": "resolveReceiptById",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"decorators": [
								{
									"name": "server",
									"type": {
										"type": "reference",
										"id": 2,
										"name": "server"
									}
								}
							],
							"sources": [
								{
									"fileName": "backend/iap/index.ts",
									"line": 67,
									"character": 33
								}
							],
							"signatures": [
								{
									"id": 310,
									"name": "resolveReceiptById",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 311,
											"name": "receiptId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 264,
														"name": "IapReceipt"
													}
												]
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 289,
										"name": "IAP.resolveReceiptById"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 288,
								"name": "IAP.resolveReceiptById"
							}
						},
						{
							"id": 312,
							"name": "resolveReceiptsBySku",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"decorators": [
								{
									"name": "server",
									"type": {
										"type": "reference",
										"id": 2,
										"name": "server"
									}
								}
							],
							"sources": [
								{
									"fileName": "backend/iap/index.ts",
									"line": 82,
									"character": 35
								}
							],
							"signatures": [
								{
									"id": 313,
									"name": "resolveReceiptsBySku",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 314,
											"name": "sku",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 264,
													"name": "IapReceipt"
												}
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 292,
										"name": "IAP.resolveReceiptsBySku"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 291,
								"name": "IAP.resolveReceiptsBySku"
							}
						},
						{
							"id": 306,
							"name": "resolveReceiptsByUserToken",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"decorators": [
								{
									"name": "server",
									"type": {
										"type": "reference",
										"id": 2,
										"name": "server"
									}
								}
							],
							"sources": [
								{
									"fileName": "backend/iap/index.ts",
									"line": 47,
									"character": 41
								}
							],
							"signatures": [
								{
									"id": 307,
									"name": "resolveReceiptsByUserToken",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 308,
											"name": "userToken",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 264,
													"name": "IapReceipt"
												}
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 286,
										"name": "IAP.resolveReceiptsByUserToken"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 285,
								"name": "IAP.resolveReceiptsByUserToken"
							}
						},
						{
							"id": 315,
							"name": "updateReceipt",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "backend/iap/index.ts",
									"line": 96,
									"character": 28
								}
							],
							"signatures": [
								{
									"id": 316,
									"name": "updateReceipt",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 317,
											"name": "receiptId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 318,
											"name": "attributes",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 319,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 320,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 321,
																"name": "index",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											}
										},
										{
											"id": 322,
											"name": "notificationMessage",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 295,
										"name": "IAP.updateReceipt"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 294,
								"name": "IAP.updateReceipt"
							}
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								323,
								309,
								312,
								306,
								315
							]
						}
					],
					"sources": [
						{
							"fileName": "backend/iap/index.ts",
							"line": 132,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 277,
							"name": "IAP"
						}
					]
				},
				{
					"id": 264,
					"name": "IapReceipt",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 268,
							"name": "attributes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/iap/index.ts",
									"line": 19,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 269,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 270,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 271,
												"name": "index",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							}
						},
						{
							"id": 276,
							"name": "datePurchased",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/iap/index.ts",
									"line": 24,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							}
						},
						{
							"id": 266,
							"name": "productId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/iap/index.ts",
									"line": 17,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 267,
							"name": "purchasedPrice",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/iap/index.ts",
									"line": 18,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 265,
							"name": "receiptId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/iap/index.ts",
									"line": 16,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 272,
							"name": "transactionIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/iap/index.ts",
									"line": 20,
									"character": 16
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 273,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 274,
											"name": "credit",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "backend/iap/index.ts",
													"line": 21,
													"character": 10
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 275,
											"name": "debit",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "backend/iap/index.ts",
													"line": 22,
													"character": 9
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												274,
												275
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								268,
								276,
								266,
								267,
								265,
								272
							]
						}
					],
					"sources": [
						{
							"fileName": "backend/iap/index.ts",
							"line": 15,
							"character": 27
						}
					]
				},
				{
					"id": 263,
					"name": "UserToken",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "backend/iap/index.ts",
							"line": 13,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						257
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						277
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						305,
						264
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						263
					]
				}
			],
			"sources": [
				{
					"fileName": "backend/iap/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 326,
			"name": "backend/identity",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 327,
					"name": "AuthRoutes",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"children": [
						{
							"id": 328,
							"name": "GET_GRANT",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/identity/index.ts",
									"line": 6,
									"character": 11
								}
							],
							"defaultValue": "\"/v1/apps/auth/consumer/getGrantForToken\""
						},
						{
							"id": 329,
							"name": "GET_ROLE",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/identity/index.ts",
									"line": 7,
									"character": 10
								}
							],
							"defaultValue": "\"/v1/apps/auth/consumer/getRoleForToken\""
						},
						{
							"id": 330,
							"name": "PUSH_NOTIFICATION",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/identity/index.ts",
									"line": 8,
									"character": 19
								}
							],
							"defaultValue": "\"/v1/apps/auth/consumer/pushNotification\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								328,
								329,
								330
							]
						}
					],
					"sources": [
						{
							"fileName": "backend/identity/index.ts",
							"line": 5,
							"character": 22
						}
					]
				},
				{
					"id": 331,
					"name": "UserRole",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"children": [
						{
							"id": 332,
							"name": "ADMIN",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/identity/index.ts",
									"line": 12,
									"character": 7
								}
							],
							"defaultValue": "\"admin\""
						},
						{
							"id": 333,
							"name": "UNKNOWN",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/identity/index.ts",
									"line": 13,
									"character": 9
								}
							],
							"defaultValue": "\"unknown\""
						},
						{
							"id": 334,
							"name": "USER",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/identity/index.ts",
									"line": 14,
									"character": 6
								}
							],
							"defaultValue": "\"user\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								332,
								333,
								334
							]
						}
					],
					"sources": [
						{
							"fileName": "backend/identity/index.ts",
							"line": 11,
							"character": 20
						}
					]
				},
				{
					"id": 349,
					"name": "Identity",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 350,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 351,
									"name": "new Identity",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 352,
											"name": "config",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 12,
												"name": "BackendConfigurationInput"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 349,
										"name": "Identity"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 21,
										"name": "Base.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 20,
								"name": "Base.constructor"
							}
						},
						{
							"id": 365,
							"name": "projectId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "backend/base/index.ts",
									"line": 50,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 23,
								"name": "Base.projectId"
							}
						},
						{
							"id": 366,
							"name": "projectToken",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "backend/base/index.ts",
									"line": 51,
									"character": 24
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 24,
								"name": "Base.projectToken"
							}
						},
						{
							"id": 354,
							"name": "rootHeaders",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "backend/identity/index.ts",
									"line": 34,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "Object"
							}
						},
						{
							"id": 353,
							"name": "rootPath",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "backend/identity/index.ts",
									"line": 33,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 359,
							"name": "pushNotificationToOwner",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"decorators": [
								{
									"name": "server",
									"type": {
										"type": "reference",
										"id": 2,
										"name": "server"
									}
								}
							],
							"sources": [
								{
									"fileName": "backend/identity/index.ts",
									"line": 63,
									"character": 38
								}
							],
							"signatures": [
								{
									"id": 360,
									"name": "pushNotificationToOwner",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 361,
											"name": "notification",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 344,
												"name": "PushNotification"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 355,
							"name": "pushNotificationToUser",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"decorators": [
								{
									"name": "server",
									"type": {
										"type": "reference",
										"id": 2,
										"name": "server"
									}
								}
							],
							"sources": [
								{
									"fileName": "backend/identity/index.ts",
									"line": 49,
									"character": 37
								}
							],
							"signatures": [
								{
									"id": 356,
									"name": "pushNotificationToUser",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 357,
											"name": "userId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 358,
											"name": "notification",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 344,
												"name": "PushNotification"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 362,
							"name": "resolveUserFromToken",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"decorators": [
								{
									"name": "server",
									"type": {
										"type": "reference",
										"id": 2,
										"name": "server"
									}
								}
							],
							"sources": [
								{
									"fileName": "backend/identity/index.ts",
									"line": 77,
									"character": 35
								}
							],
							"signatures": [
								{
									"id": 363,
									"name": "resolveUserFromToken",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 364,
											"name": "token",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 335,
												"name": "User"
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								350
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								365,
								366,
								354,
								353
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								359,
								355,
								362
							]
						}
					],
					"sources": [
						{
							"fileName": "backend/identity/index.ts",
							"line": 32,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 19,
							"name": "Base"
						}
					]
				},
				{
					"id": 344,
					"name": "PushNotification",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 345,
							"name": "appName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/identity/index.ts",
									"line": 26,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 346,
							"name": "icon",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/identity/index.ts",
									"line": 27,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 347,
							"name": "message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/identity/index.ts",
									"line": 28,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 348,
							"name": "ref",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "backend/identity/index.ts",
									"line": 29,
									"character": 5
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								345,
								346,
								347,
								348
							]
						}
					],
					"sources": [
						{
							"fileName": "backend/identity/index.ts",
							"line": 25,
							"character": 33
						}
					]
				},
				{
					"id": 335,
					"name": "User",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 337,
							"name": "attributes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/identity/index.ts",
									"line": 19,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 338,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 339,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 340,
												"name": "index",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							}
						},
						{
							"id": 341,
							"name": "dateCreated",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/identity/index.ts",
									"line": 20,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 336,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/identity/index.ts",
									"line": 18,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 342,
							"name": "pushNotificationsEnabled",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/identity/index.ts",
									"line": 21,
									"character": 26
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 343,
							"name": "role",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "backend/identity/index.ts",
									"line": 22,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"id": 331,
								"name": "UserRole"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								337,
								341,
								336,
								342,
								343
							]
						}
					],
					"sources": [
						{
							"fileName": "backend/identity/index.ts",
							"line": 17,
							"character": 21
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						327,
						331
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						349
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						344,
						335
					]
				}
			],
			"sources": [
				{
					"fileName": "backend/identity/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 381,
			"name": "backend/middleware",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 382,
					"name": "middleware",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "backend/middleware/index.ts",
							"line": 3,
							"character": 26
						}
					],
					"signatures": [
						{
							"id": 383,
							"name": "middleware",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 384,
									"name": "req",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Request"
									}
								},
								{
									"id": 385,
									"name": "res",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Response"
									}
								},
								{
									"id": 386,
									"name": "next",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NextFunction"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						382
					]
				}
			],
			"sources": [
				{
					"fileName": "backend/middleware/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 387,
			"name": "backend/secret",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 388,
					"name": "Secret",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 389,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 390,
									"name": "new Secret",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 391,
											"name": "config",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 12,
												"name": "BackendConfigurationInput"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 388,
										"name": "Secret"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 21,
										"name": "Base.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 20,
								"name": "Base.constructor"
							}
						},
						{
							"id": 402,
							"name": "projectId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "backend/base/index.ts",
									"line": 50,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 23,
								"name": "Base.projectId"
							}
						},
						{
							"id": 403,
							"name": "projectToken",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "backend/base/index.ts",
									"line": 51,
									"character": 24
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 24,
								"name": "Base.projectToken"
							}
						},
						{
							"id": 393,
							"name": "rootHeaders",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "backend/secret/index.ts",
									"line": 12,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "Object"
							}
						},
						{
							"id": 392,
							"name": "rootPath",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "backend/secret/index.ts",
									"line": 11,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 398,
							"name": "generateSignedUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"decorators": [
								{
									"name": "server",
									"type": {
										"type": "reference",
										"id": 2,
										"name": "server"
									}
								}
							],
							"sources": [
								{
									"fileName": "backend/secret/index.ts",
									"line": 44,
									"character": 32
								}
							],
							"signatures": [
								{
									"id": 399,
									"name": "generateSignedUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 400,
											"name": "resource",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 401,
											"name": "expireSeconds",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 394,
							"name": "resolveValue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"decorators": [
								{
									"name": "server",
									"type": {
										"type": "reference",
										"id": 2,
										"name": "server"
									}
								}
							],
							"sources": [
								{
									"fileName": "backend/secret/index.ts",
									"line": 27,
									"character": 27
								}
							],
							"signatures": [
								{
									"id": 395,
									"name": "resolveValue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 396,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 397,
											"name": "keyPath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "T"
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								389
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								402,
								403,
								393,
								392
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								398,
								394
							]
						}
					],
					"sources": [
						{
							"fileName": "backend/secret/index.ts",
							"line": 10,
							"character": 19
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 19,
							"name": "Base"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						388
					]
				}
			],
			"sources": [
				{
					"fileName": "backend/secret/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 482,
			"name": "frontend",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 494,
					"name": "Koji",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 495,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 496,
									"name": "new Koji",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 494,
										"name": "Koji"
									}
								}
							]
						},
						{
							"id": 500,
							"name": "analytics",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "frontend/index.ts",
									"line": 28,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 411,
								"name": "Analytics"
							},
							"defaultValue": "..."
						},
						{
							"id": 498,
							"name": "configInitialized",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "frontend/index.ts",
									"line": 25,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 501,
							"name": "iap",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "frontend/index.ts",
									"line": 29,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"id": 430,
								"name": "IAP"
							},
							"defaultValue": "..."
						},
						{
							"id": 502,
							"name": "identity",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "frontend/index.ts",
									"line": 30,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 456,
								"name": "Identity"
							},
							"defaultValue": "..."
						},
						{
							"id": 497,
							"name": "isReady",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "frontend/index.ts",
									"line": 24,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 503,
							"name": "playerState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "frontend/index.ts",
									"line": 31,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"id": 547,
								"name": "PlayerState"
							},
							"defaultValue": "..."
						},
						{
							"id": 504,
							"name": "remix",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "frontend/index.ts",
									"line": 32,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"id": 574,
								"name": "Remix"
							},
							"defaultValue": "..."
						},
						{
							"id": 499,
							"name": "services",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "frontend/index.ts",
									"line": 26,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 488,
								"name": "Services"
							},
							"defaultValue": "..."
						},
						{
							"id": 505,
							"name": "ui",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "frontend/index.ts",
									"line": 33,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 829,
								"name": "UI"
							},
							"defaultValue": "..."
						},
						{
							"id": 506,
							"name": "config",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "frontend/index.ts",
									"line": 49,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 507,
									"name": "config",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Prepare this package for use by passing in the data from your koji.json\nfile. In addition to setting up things like your serviceMap and remix values,\nthis function will also do some basic structural checks."
									},
									"parameters": [
										{
											"id": 508,
											"name": "kojiConfig",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Your Koji configuration object (e.g., require('./koji.json'))"
											},
											"type": {
												"type": "reference",
												"id": 483,
												"name": "KojiConfig"
											},
											"defaultValue": "..."
										},
										{
											"id": 509,
											"name": "kojiConfigOptions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 492,
												"name": "KojiConfigOptions"
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 510,
							"name": "ready",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"decorators": [
								{
									"name": "client",
									"type": {
										"type": "reference",
										"id": 405,
										"name": "client"
									}
								}
							],
							"sources": [
								{
									"fileName": "frontend/index.ts",
									"line": 105,
									"character": 7
								}
							],
							"signatures": [
								{
									"id": 511,
									"name": "ready",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								495
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								500,
								498,
								501,
								502,
								497,
								503,
								504,
								499,
								505
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								506,
								510
							]
						}
					],
					"sources": [
						{
							"fileName": "frontend/index.ts",
							"line": 23,
							"character": 17
						}
					]
				},
				{
					"id": 483,
					"name": "KojiConfig",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 487,
							"name": "@@initialTransform",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "frontend/index.ts",
									"line": 13,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 485,
							"name": "deploy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "frontend/index.ts",
									"line": 12,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 484,
							"name": "develop",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "frontend/index.ts",
									"line": 11,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 486,
							"name": "remixData",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "frontend/index.ts",
									"line": 13,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								487,
								485,
								484,
								486
							]
						}
					],
					"sources": [
						{
							"fileName": "frontend/index.ts",
							"line": 10,
							"character": 27
						}
					]
				},
				{
					"id": 492,
					"name": "KojiConfigOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 493,
							"name": "services",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "frontend/index.ts",
									"line": 20,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 488,
								"name": "Services"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								493
							]
						}
					],
					"sources": [
						{
							"fileName": "frontend/index.ts",
							"line": 19,
							"character": 34
						}
					]
				},
				{
					"id": 488,
					"name": "Services",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "frontend/index.ts",
							"line": 17,
							"character": 20
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 489,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "frontend/index.ts",
									"line": 17,
									"character": 22
								}
							],
							"indexSignature": {
								"id": 490,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 491,
										"name": "key",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "undefined"
										}
									]
								}
							}
						}
					}
				},
				{
					"id": 512,
					"name": "default",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"type": {
						"type": "reference",
						"id": 494,
						"name": "Koji"
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						494
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						483,
						492
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						488
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						512
					]
				}
			],
			"sources": [
				{
					"fileName": "frontend/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 404,
			"name": "frontend/@decorators/client",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 405,
					"name": "client",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"decorates": [
						{
							"type": "reference",
							"id": 414,
							"name": "track"
						},
						{
							"type": "reference",
							"id": 433,
							"name": "startPurchase"
						},
						{
							"type": "reference",
							"id": 459,
							"name": "getToken"
						},
						{
							"type": "reference",
							"id": 510,
							"name": "ready"
						},
						{
							"type": "reference",
							"id": 552,
							"name": "subscribe"
						},
						{
							"type": "reference",
							"id": 579,
							"name": "init"
						},
						{
							"type": "reference",
							"id": 582,
							"name": "get"
						},
						{
							"type": "reference",
							"id": 584,
							"name": "set"
						},
						{
							"type": "reference",
							"id": 587,
							"name": "overwrite"
						},
						{
							"type": "reference",
							"id": 590,
							"name": "finish"
						},
						{
							"type": "reference",
							"id": 592,
							"name": "encryptValue"
						},
						{
							"type": "reference",
							"id": 595,
							"name": "decryptValue"
						},
						{
							"type": "reference",
							"id": 860,
							"name": "confirmation"
						},
						{
							"type": "reference",
							"id": 863,
							"name": "alert"
						}
					],
					"sources": [
						{
							"fileName": "frontend/@decorators/client.ts",
							"line": 10,
							"character": 22
						}
					],
					"signatures": [
						{
							"id": 406,
							"name": "client",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Verifies that client-side methods are used only in frontend services of the Koji.",
								"returns": "Method's behavior or an error, if the method is being invoked in a node/backend environment.\n"
							},
							"parameters": [
								{
									"id": 407,
									"name": "target",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Class to which the method belongs."
									},
									"type": {
										"type": "reference",
										"name": "Object"
									}
								},
								{
									"id": 408,
									"name": "propertyKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Method name."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 409,
									"name": "descriptor",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Method's behavior (which can be mutated inside this function)."
									},
									"type": {
										"type": "reference",
										"name": "PropertyDescriptor"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						405
					]
				}
			],
			"sources": [
				{
					"fileName": "frontend/@decorators/client.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 410,
			"name": "frontend/analytics",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 411,
					"name": "Analytics",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Enables you to track custom events in your Koji templates. For example, track `onClick` events for the links and buttons in a Koji.",
						"text": "To view the analytics data for your published Koji, go to **Manage this Koji > Open Creator Dashboard > Open Analytics**. You will see data for your custom events along with a standard set of built-in metrics, which are calculated from the Koji’s access logs.\n\n<p class=\"tip\">Analytics data is processed at frequent intervals throughout the day. If you are testing the custom events in a published template and you don’t see results at first, wait 10 minutes to account for data processing latency, and then check again.</p>\n"
					},
					"children": [
						{
							"id": 412,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 413,
									"name": "new Analytics",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 411,
										"name": "Analytics"
									}
								}
							]
						},
						{
							"id": 414,
							"name": "track",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"decorators": [
								{
									"name": "client",
									"type": {
										"type": "reference",
										"id": 405,
										"name": "client"
									}
								}
							],
							"sources": [
								{
									"fileName": "frontend/analytics/index.ts",
									"line": 28,
									"character": 7
								}
							],
							"signatures": [
								{
									"id": 415,
									"name": "track",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Generates an analytics event with the specified name and data payload, if applicable.",
										"returns": "Indicates whether the event was generated.\n",
										"tags": [
											{
												"tag": "example",
												"text": "\n\n```javascript\nconst event = Koji.analytics.track('My Custom Event');\n\n// with optional payload\nconst event = Koji.analytics.track('Won game', { score: 120 });\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 416,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the custom event."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 417,
											"name": "payload",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "List of custom key-value pairs to save with the event."
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 418,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 419,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 420,
																"name": "index",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								412
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								414
							]
						}
					],
					"sources": [
						{
							"fileName": "frontend/analytics/index.ts",
							"line": 10,
							"character": 22
						}
					]
				},
				{
					"id": 421,
					"name": "analytics",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "frontend/analytics/index.ts",
							"line": 42,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"id": 411,
						"name": "Analytics"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						411
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						421
					]
				}
			],
			"sources": [
				{
					"fileName": "frontend/analytics/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 422,
			"name": "frontend/iap",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 430,
					"name": "IAP",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Manages in-app purchase transactions on the frontend of your Koji."
					},
					"children": [
						{
							"id": 431,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 432,
									"name": "new IAP",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 430,
										"name": "IAP"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 516,
										"name": "KojiBridge.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 515,
								"name": "KojiBridge.constructor"
							}
						},
						{
							"id": 437,
							"name": "execCallbackOnMessage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "frontend/kojiBridge/index.ts",
									"line": 28,
									"character": 33
								}
							],
							"signatures": [
								{
									"id": 438,
									"name": "execCallbackOnMessage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets a listener for a specific event, and invokes a function to handle the event.",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 439,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Function to run when the event is fired."
											},
											"type": {
												"type": "reference",
												"name": "Function"
											}
										},
										{
											"id": 440,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the event."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 441,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 442,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 518,
										"name": "KojiBridge.execCallbackOnMessage"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 517,
								"name": "KojiBridge.execCallbackOnMessage"
							}
						},
						{
							"id": 443,
							"name": "sendMessage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "frontend/kojiBridge/index.ts",
									"line": 48,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 444,
									"name": "sendMessage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {},
									"parameters": [
										{
											"id": 445,
											"name": "postMessage",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Data to be sent to the Koji.\n"
											},
											"type": {
												"type": "reference",
												"name": "PostMessage"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 524,
										"name": "KojiBridge.sendMessage"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 523,
								"name": "KojiBridge.sendMessage"
							}
						},
						{
							"id": 446,
							"name": "sendMessageAndAwaitResponse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "frontend/kojiBridge/index.ts",
									"line": 67,
									"character": 39
								}
							],
							"signatures": [
								{
									"id": 447,
									"name": "sendMessageAndAwaitResponse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 448,
											"name": "postMessage",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Data to be sent to the Koji."
											},
											"type": {
												"type": "reference",
												"name": "PostMessage"
											}
										},
										{
											"id": 449,
											"name": "platformMessageName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 527,
										"name": "KojiBridge.sendMessageAndAwaitResponse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 526,
								"name": "KojiBridge.sendMessageAndAwaitResponse"
							}
						},
						{
							"id": 433,
							"name": "startPurchase",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"decorators": [
								{
									"name": "client",
									"type": {
										"type": "reference",
										"id": 405,
										"name": "client"
									}
								}
							],
							"sources": [
								{
									"fileName": "frontend/iap/index.ts",
									"line": 36,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 434,
									"name": "startPurchase",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Prompts the user to purchase a product from the Koji. Products are defined in the entitlements file and registered or updated when the Koji is published.",
										"tags": [
											{
												"tag": "example",
												"text": "\n``` javascript\nKoji.iap.startPurchase(sku, purchaseOptions);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 435,
											"name": "sku",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Identifier for the product to purchase.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 436,
											"name": "purchaseOptions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 423,
												"name": "PurchaseOptions"
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 426,
												"name": "Purchase"
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								431
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								437,
								443,
								446,
								433
							]
						}
					],
					"sources": [
						{
							"fileName": "frontend/iap/index.ts",
							"line": 24,
							"character": 16
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 514,
							"name": "KojiBridge"
						}
					]
				},
				{
					"id": 426,
					"name": "Purchase",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Results of an in-app purchase transaction."
					},
					"children": [
						{
							"id": 429,
							"name": "receiptId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Unique identifier for the receipt, if the purchase was successful, or `undefined`, if not."
							},
							"sources": [
								{
									"fileName": "frontend/iap/index.ts",
									"line": 19,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 427,
							"name": "success",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Indicates whether the purchase was successful."
							},
							"sources": [
								{
									"fileName": "frontend/iap/index.ts",
									"line": 15,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 428,
							"name": "userToken",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Temporary token for the current user’s session. See [[getToken]]."
							},
							"sources": [
								{
									"fileName": "frontend/iap/index.ts",
									"line": 17,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								429,
								427,
								428
							]
						}
					],
					"sources": [
						{
							"fileName": "frontend/iap/index.ts",
							"line": 13,
							"character": 25
						}
					]
				},
				{
					"id": 423,
					"name": "PurchaseOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Custom information to add to a [[IapReceipt | transaction receipt]] for a given in-app purchase."
					},
					"children": [
						{
							"id": 424,
							"name": "amount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Amount of the purchase."
							},
							"sources": [
								{
									"fileName": "frontend/iap/index.ts",
									"line": 7,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 425,
							"name": "customMessage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Custom message associated with the purchase. This value is stored as a custom attribute on the [[IapReceipt | transaction receipt]]."
							},
							"sources": [
								{
									"fileName": "frontend/iap/index.ts",
									"line": 9,
									"character": 15
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								424,
								425
							]
						}
					],
					"sources": [
						{
							"fileName": "frontend/iap/index.ts",
							"line": 5,
							"character": 32
						}
					]
				},
				{
					"id": 450,
					"name": "iap",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "frontend/iap/index.ts",
							"line": 53,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"id": 430,
						"name": "IAP"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						430
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						426,
						423
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						450
					]
				}
			],
			"sources": [
				{
					"fileName": "frontend/iap/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 452,
			"name": "frontend/identity",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 453,
					"name": "AuthGrantCapability",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"comment": {
						"shortText": "Capabilities that a user can grant the current Koji authorization to use."
					},
					"children": [
						{
							"id": 454,
							"name": "PUSH_NOTIFICATIONS",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"comment": {
								"shortText": "Allows the current Koji to send push notifications to the user."
							},
							"sources": [
								{
									"fileName": "frontend/identity/index.ts",
									"line": 9,
									"character": 20
								}
							],
							"defaultValue": "\"push_notifications\""
						},
						{
							"id": 455,
							"name": "USERNAME",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"comment": {
								"shortText": "Creates a unique ID for the user on the current Koji, and allows the Koji to map the user’s token to a persistent user ID in storage, such as a backend database."
							},
							"sources": [
								{
									"fileName": "frontend/identity/index.ts",
									"line": 11,
									"character": 10
								}
							],
							"defaultValue": "\"username\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								454,
								455
							]
						}
					],
					"sources": [
						{
							"fileName": "frontend/identity/index.ts",
							"line": 7,
							"character": 31
						}
					]
				},
				{
					"id": 456,
					"name": "Identity",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Manages authentication and authorization on the frontend of your Koji."
					},
					"children": [
						{
							"id": 457,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 458,
									"name": "new Identity",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 456,
										"name": "Identity"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 516,
										"name": "KojiBridge.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 515,
								"name": "KojiBridge.constructor"
							}
						},
						{
							"id": 461,
							"name": "checkGrants",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "frontend/identity/index.ts",
									"line": 52,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 462,
									"name": "checkGrants",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Checks whether the user has granted authorizations to the Koji. Use this method to determine whether to request authorization for certain capabilities.",
										"returns": "Indicates whether the user has already granted authorization for the capabilities.\n",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst hasGrant = await Koji.identity.checkGrants(['username', 'push_notifications']);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 463,
											"name": "grants",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "List of authorization grants to check for the user."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 453,
													"name": "AuthGrantCapability"
												}
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 468,
							"name": "execCallbackOnMessage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "frontend/kojiBridge/index.ts",
									"line": 28,
									"character": 33
								}
							],
							"signatures": [
								{
									"id": 469,
									"name": "execCallbackOnMessage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets a listener for a specific event, and invokes a function to handle the event.",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 470,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Function to run when the event is fired."
											},
											"type": {
												"type": "reference",
												"name": "Function"
											}
										},
										{
											"id": 471,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the event."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 472,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 473,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 518,
										"name": "KojiBridge.execCallbackOnMessage"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 517,
								"name": "KojiBridge.execCallbackOnMessage"
							}
						},
						{
							"id": 459,
							"name": "getToken",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"decorators": [
								{
									"name": "client",
									"type": {
										"type": "reference",
										"id": 405,
										"name": "client"
									}
								}
							],
							"sources": [
								{
									"fileName": "frontend/identity/index.ts",
									"line": 29,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 460,
									"name": "getToken",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Gets a token identifying the current user.",
										"returns": "{@link UserToken}\n",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst token = await Koji.identity.getToken();\n```\n"
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 464,
							"name": "requestGrants",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "frontend/identity/index.ts",
									"line": 75,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 465,
									"name": "requestGrants",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Requests the specified authorization grants from the user for the Koji.",
										"returns": "[[UserToken]]\n",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst hasGrant = await Koji.identity.requestGrants(['username', 'push_notifications']);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 466,
											"name": "grants",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "List of {@link AuthGrantCapability| authorization grants} to request from the user."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 453,
													"name": "AuthGrantCapability"
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 467,
											"name": "usageDescription",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Custom message to display when requesting the grant."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 474,
							"name": "sendMessage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "frontend/kojiBridge/index.ts",
									"line": 48,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 475,
									"name": "sendMessage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {},
									"parameters": [
										{
											"id": 476,
											"name": "postMessage",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Data to be sent to the Koji.\n"
											},
											"type": {
												"type": "reference",
												"name": "PostMessage"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 524,
										"name": "KojiBridge.sendMessage"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 523,
								"name": "KojiBridge.sendMessage"
							}
						},
						{
							"id": 477,
							"name": "sendMessageAndAwaitResponse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "frontend/kojiBridge/index.ts",
									"line": 67,
									"character": 39
								}
							],
							"signatures": [
								{
									"id": 478,
									"name": "sendMessageAndAwaitResponse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 479,
											"name": "postMessage",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Data to be sent to the Koji."
											},
											"type": {
												"type": "reference",
												"name": "PostMessage"
											}
										},
										{
											"id": 480,
											"name": "platformMessageName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 527,
										"name": "KojiBridge.sendMessageAndAwaitResponse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 526,
								"name": "KojiBridge.sendMessageAndAwaitResponse"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								457
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								461,
								468,
								459,
								464,
								474,
								477
							]
						}
					],
					"sources": [
						{
							"fileName": "frontend/identity/index.ts",
							"line": 17,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 514,
							"name": "KojiBridge"
						}
					]
				},
				{
					"id": 481,
					"name": "identity",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "frontend/identity/index.ts",
							"line": 88,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"id": 456,
						"name": "Identity"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						453
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						456
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						481
					]
				}
			],
			"sources": [
				{
					"fileName": "frontend/identity/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 451,
			"name": "frontend/identity/index.spec",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"sources": [
				{
					"fileName": "frontend/identity/index.spec.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 513,
			"name": "frontend/kojiBridge",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 514,
					"name": "KojiBridge",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Enables communication between the platform and the Koji."
					},
					"children": [
						{
							"id": 515,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 516,
									"name": "new KojiBridge",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 514,
										"name": "KojiBridge"
									}
								}
							]
						},
						{
							"id": 517,
							"name": "execCallbackOnMessage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "frontend/kojiBridge/index.ts",
									"line": 28,
									"character": 33
								}
							],
							"signatures": [
								{
									"id": 518,
									"name": "execCallbackOnMessage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets a listener for a specific event, and invokes a function to handle the event.",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 519,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Function to run when the event is fired."
											},
											"type": {
												"type": "reference",
												"name": "Function"
											}
										},
										{
											"id": 520,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the event."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 521,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 522,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							]
						},
						{
							"id": 523,
							"name": "sendMessage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "frontend/kojiBridge/index.ts",
									"line": 48,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 524,
									"name": "sendMessage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {},
									"parameters": [
										{
											"id": 525,
											"name": "postMessage",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Data to be sent to the Koji.\n"
											},
											"type": {
												"type": "reference",
												"name": "PostMessage"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 526,
							"name": "sendMessageAndAwaitResponse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "frontend/kojiBridge/index.ts",
									"line": 67,
									"character": 39
								}
							],
							"signatures": [
								{
									"id": 527,
									"name": "sendMessageAndAwaitResponse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 528,
											"name": "postMessage",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Data to be sent to the Koji."
											},
											"type": {
												"type": "reference",
												"name": "PostMessage"
											}
										},
										{
											"id": 529,
											"name": "platformMessageName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								515
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								517,
								523,
								526
							]
						}
					],
					"sources": [
						{
							"fileName": "frontend/kojiBridge/index.ts",
							"line": 20,
							"character": 23
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 430,
							"name": "IAP"
						},
						{
							"type": "reference",
							"id": 456,
							"name": "Identity"
						},
						{
							"type": "reference",
							"id": 547,
							"name": "PlayerState"
						},
						{
							"type": "reference",
							"id": 574,
							"name": "Remix"
						},
						{
							"type": "reference",
							"id": 683,
							"name": "Capture"
						},
						{
							"type": "reference",
							"id": 829,
							"name": "UI"
						},
						{
							"type": "reference",
							"id": 857,
							"name": "Present"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						514
					]
				}
			],
			"sources": [
				{
					"fileName": "frontend/kojiBridge/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 530,
			"name": "frontend/playerState",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 547,
					"name": "PlayerState",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Manages the context of the Koji to enable distinct experiences for different users and views."
					},
					"children": [
						{
							"id": 548,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 549,
									"name": "new PlayerState",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 547,
										"name": "PlayerState"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 516,
										"name": "KojiBridge.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 515,
								"name": "KojiBridge.constructor"
							}
						},
						{
							"id": 550,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "frontend/playerState/index.ts",
									"line": 58,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 531,
								"name": "PlayerStateContext"
							},
							"defaultValue": "'default'"
						},
						{
							"id": 551,
							"name": "receiptType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "frontend/playerState/index.ts",
									"line": 59,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "literal",
										"value": "buyer"
									},
									{
										"type": "literal",
										"value": "seller"
									}
								]
							}
						},
						{
							"id": 555,
							"name": "execCallbackOnMessage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "frontend/kojiBridge/index.ts",
									"line": 28,
									"character": 33
								}
							],
							"signatures": [
								{
									"id": 556,
									"name": "execCallbackOnMessage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets a listener for a specific event, and invokes a function to handle the event.",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 557,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Function to run when the event is fired."
											},
											"type": {
												"type": "reference",
												"name": "Function"
											}
										},
										{
											"id": 558,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the event."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 559,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 560,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 518,
										"name": "KojiBridge.execCallbackOnMessage"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 517,
								"name": "KojiBridge.execCallbackOnMessage"
							}
						},
						{
							"id": 561,
							"name": "sendMessage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "frontend/kojiBridge/index.ts",
									"line": 48,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 562,
									"name": "sendMessage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {},
									"parameters": [
										{
											"id": 563,
											"name": "postMessage",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Data to be sent to the Koji.\n"
											},
											"type": {
												"type": "reference",
												"name": "PostMessage"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 524,
										"name": "KojiBridge.sendMessage"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 523,
								"name": "KojiBridge.sendMessage"
							}
						},
						{
							"id": 564,
							"name": "sendMessageAndAwaitResponse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "frontend/kojiBridge/index.ts",
									"line": 67,
									"character": 39
								}
							],
							"signatures": [
								{
									"id": 565,
									"name": "sendMessageAndAwaitResponse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 566,
											"name": "postMessage",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Data to be sent to the Koji."
											},
											"type": {
												"type": "reference",
												"name": "PostMessage"
											}
										},
										{
											"id": 567,
											"name": "platformMessageName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 527,
										"name": "KojiBridge.sendMessageAndAwaitResponse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 526,
								"name": "KojiBridge.sendMessageAndAwaitResponse"
							}
						},
						{
							"id": 552,
							"name": "subscribe",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"decorators": [
								{
									"name": "client",
									"type": {
										"type": "reference",
										"id": 405,
										"name": "client"
									}
								}
							],
							"sources": [
								{
									"fileName": "frontend/playerState/index.ts",
									"line": 93,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 553,
									"name": "subscribe",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Listens to changes in remix state and invokes a callback function to enable different experiences during remix, preview, or use.",
										"returns": "Function to unsubscribe from remix state listener.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst unsubscribe = Koji.playerState.subscribe((remixing, { type, mode }) => {\n // Change Koji experience\n});\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 554,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"id": 542,
												"name": "IsRemixingCallback"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Function"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								548
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								550,
								551
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								555,
								561,
								564,
								552
							]
						}
					],
					"sources": [
						{
							"fileName": "frontend/playerState/index.ts",
							"line": 57,
							"character": 24
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 514,
							"name": "KojiBridge"
						}
					]
				},
				{
					"id": 538,
					"name": "EditorAttributes",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Describes the remixer's editor."
					},
					"children": [
						{
							"id": 540,
							"name": "mode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "frontend/playerState/index.ts",
									"line": 38,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "literal",
										"value": "edit"
									},
									{
										"type": "literal",
										"value": "new"
									}
								]
							}
						},
						{
							"id": 539,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "[[EditorType]]"
							},
							"sources": [
								{
									"fileName": "frontend/playerState/index.ts",
									"line": 37,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "literal",
										"value": "instant"
									},
									{
										"type": "literal",
										"value": "full"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								540,
								539
							]
						}
					],
					"sources": [
						{
							"fileName": "frontend/playerState/index.ts",
							"line": 35,
							"character": 33
						}
					]
				},
				{
					"id": 533,
					"name": "ExpectedQueryParameters",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {},
					"children": [
						{
							"id": 534,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "frontend/playerState/index.ts",
									"line": 19,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "literal",
										"value": "about"
									},
									{
										"type": "literal",
										"value": "admin"
									},
									{
										"type": "literal",
										"value": "remix"
									},
									{
										"type": "literal",
										"value": "sticker"
									},
									{
										"type": "literal",
										"value": "receipt"
									},
									{
										"type": "literal",
										"value": "screenshot"
									},
									{
										"type": "literal",
										"value": "default"
									}
								]
							}
						},
						{
							"id": 535,
							"name": "dynamic-receipt",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "frontend/playerState/index.ts",
									"line": 19,
									"character": 31
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "literal",
										"value": "buyer"
									},
									{
										"type": "literal",
										"value": "seller"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								534,
								535
							]
						}
					],
					"sources": [
						{
							"fileName": "frontend/playerState/index.ts",
							"line": 18,
							"character": 40
						}
					]
				},
				{
					"id": 537,
					"name": "EditorMode",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Distinguishes between a `new` remix and an `edit` to the user’s existing Koji."
					},
					"sources": [
						{
							"fileName": "frontend/playerState/index.ts",
							"line": 30,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "edit"
							},
							{
								"type": "literal",
								"value": "new"
							}
						]
					}
				},
				{
					"id": 536,
					"name": "EditorType",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Type of editor, either `instant` for an instant remix or `full` for the code editor."
					},
					"sources": [
						{
							"fileName": "frontend/playerState/index.ts",
							"line": 26,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "instant"
							},
							{
								"type": "literal",
								"value": "full"
							}
						]
					}
				},
				{
					"id": 542,
					"name": "IsRemixingCallback",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "frontend/playerState/index.ts",
							"line": 46,
							"character": 30
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 543,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"comment": {
								"shortText": "Function to handle changes in remix state. Receives the `isRemixing` and `editorAttributes` properties as inputs."
							},
							"sources": [
								{
									"fileName": "frontend/playerState/index.ts",
									"line": 46,
									"character": 32
								}
							],
							"signatures": [
								{
									"id": 544,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Function to handle changes in remix state. Receives the `isRemixing` and `editorAttributes` properties as inputs."
									},
									"parameters": [
										{
											"id": 545,
											"name": "isRemixing",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Indicates whether the Koji is in remixing mode.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 546,
											"name": "editorAttributes",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 538,
												"name": "EditorAttributes"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Function"
									}
								}
							]
						}
					}
				},
				{
					"id": 531,
					"name": "PlayerStateContext",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Context in which the Koji is being viewed. A Koji can provide a distinct experience for each context."
					},
					"sources": [
						{
							"fileName": "frontend/playerState/index.ts",
							"line": 8,
							"character": 30
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "about"
							},
							{
								"type": "literal",
								"value": "admin"
							},
							{
								"type": "literal",
								"value": "remix"
							},
							{
								"type": "literal",
								"value": "sticker"
							},
							{
								"type": "literal",
								"value": "receipt"
							},
							{
								"type": "literal",
								"value": "screenshot"
							},
							{
								"type": "literal",
								"value": "default"
							}
						]
					}
				},
				{
					"id": 532,
					"name": "PlayerStateReceiptType",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Who is viewing the receipt for a transaction, either `buyer` or `seller`."
					},
					"sources": [
						{
							"fileName": "frontend/playerState/index.ts",
							"line": 13,
							"character": 34
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "buyer"
							},
							{
								"type": "literal",
								"value": "seller"
							}
						]
					}
				},
				{
					"id": 541,
					"name": "ReceiptType",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Who is viewing the receipt for a transaction, either `buyer` or `seller`."
					},
					"sources": [
						{
							"fileName": "frontend/playerState/index.ts",
							"line": 44,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "seller"
							},
							{
								"type": "literal",
								"value": "buyer"
							}
						]
					}
				},
				{
					"id": 568,
					"name": "playerState",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "frontend/playerState/index.ts",
							"line": 103,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"id": 547,
						"name": "PlayerState"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						547
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						538,
						533
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						537,
						536,
						542,
						531,
						532,
						541
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						568
					]
				}
			],
			"sources": [
				{
					"fileName": "frontend/playerState/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 569,
			"name": "frontend/remix",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 574,
					"name": "Remix",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Manages the remixing experience for your Koji."
					},
					"children": [
						{
							"id": 575,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 576,
									"name": "new Remix",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 574,
										"name": "Remix"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 516,
										"name": "KojiBridge.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 515,
								"name": "KojiBridge.constructor"
							}
						},
						{
							"id": 578,
							"name": "isInitialized",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "frontend/remix/index.ts",
									"line": 26,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 577,
							"name": "values",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "frontend/remix/index.ts",
									"line": 25,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"defaultValue": "..."
						},
						{
							"id": 595,
							"name": "decryptValue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"decorators": [
								{
									"name": "client",
									"type": {
										"type": "reference",
										"id": 405,
										"name": "client"
									}
								}
							],
							"sources": [
								{
									"fileName": "frontend/remix/index.ts",
									"line": 169,
									"character": 27
								}
							],
							"signatures": [
								{
									"id": 596,
									"name": "decryptValue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Retrieves sensitive data that was {@link encryptValue | stored as an encrypted value}.",
										"text": "<p class=\"note\">Only the creator of the Koji can access the decrypted value with this method. For example, to check that the value was entered correctly. To retrieve the value for other users, use {@link resolveValue} on the backend.</p>\n",
										"returns": "Decrypted value.\n",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst value = await Koji.remix.decryptValue(encryptPath);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 597,
											"name": "encryptedValue",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Path where the encrypted value is stored."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 592,
							"name": "encryptValue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"decorators": [
								{
									"name": "client",
									"type": {
										"type": "reference",
										"id": 405,
										"name": "client"
									}
								}
							],
							"sources": [
								{
									"fileName": "frontend/remix/index.ts",
									"line": 141,
									"character": 27
								}
							],
							"signatures": [
								{
									"id": 593,
									"name": "encryptValue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Stores sensitive data as an encrypted value. The sensitive data can only be accessed programmatically and is not available when the Koji is remixed.",
										"returns": "Path where the encrypted value is stored. Use this value to {@link decryptValue | decrypt the value} on the frontend, for the creator, or to {@link resolveValue | resolve the value} on the backend, for other users.\n",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst encryptPath = await Koji.remix.encryptValue(text);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 594,
											"name": "plaintextValue",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Value to encrypt."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 600,
							"name": "execCallbackOnMessage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "frontend/kojiBridge/index.ts",
									"line": 28,
									"character": 33
								}
							],
							"signatures": [
								{
									"id": 601,
									"name": "execCallbackOnMessage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets a listener for a specific event, and invokes a function to handle the event.",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 602,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Function to run when the event is fired."
											},
											"type": {
												"type": "reference",
												"name": "Function"
											}
										},
										{
											"id": 603,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the event."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 604,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 605,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 518,
										"name": "KojiBridge.execCallbackOnMessage"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 517,
								"name": "KojiBridge.execCallbackOnMessage"
							}
						},
						{
							"id": 590,
							"name": "finish",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"decorators": [
								{
									"name": "client",
									"type": {
										"type": "reference",
										"id": 405,
										"name": "client"
									}
								}
							],
							"sources": [
								{
									"fileName": "frontend/remix/index.ts",
									"line": 123,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 591,
									"name": "finish",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Advances the Koji from remix to preview.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\n<button onClick={() => Koji.remix.finish()}>Next</button>\n```\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 582,
							"name": "get",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"decorators": [
								{
									"name": "client",
									"type": {
										"type": "reference",
										"id": 405,
										"name": "client"
									}
								}
							],
							"sources": [
								{
									"fileName": "frontend/remix/index.ts",
									"line": 70,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 583,
									"name": "get",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Gets the remix data for the Koji.",
										"returns": "Object containing the current remix data.\n",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst defaultValues = Koji.remix.get();\n```\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 579,
							"name": "init",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"decorators": [
								{
									"name": "client",
									"type": {
										"type": "reference",
										"id": 405,
										"name": "client"
									}
								}
							],
							"sources": [
								{
									"fileName": "frontend/remix/index.ts",
									"line": 39,
									"character": 6
								}
							],
							"signatures": [
								{
									"id": 580,
									"name": "init",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Initializes the remix data for the Koji with default values.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nKoji.remix.init(require('../../../koji.json'));\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 581,
											"name": "remixData",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 587,
							"name": "overwrite",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"decorators": [
								{
									"name": "client",
									"type": {
										"type": "reference",
										"id": 405,
										"name": "client"
									}
								}
							],
							"sources": [
								{
									"fileName": "frontend/remix/index.ts",
									"line": 109,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 588,
									"name": "overwrite",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Replaces all remix data with the specified object.",
										"text": "<p class=\"note\">This method overwrites all existing values in the remix data. To update specific values only, use [[set]].</p>\n",
										"returns": "Indicates whether the remix data was successfully replaced.\n",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nawait Koji.remix.overwrite({'myColor': color, 'myText': text});\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 589,
											"name": "newValues",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Object containing the new remix data for the Koji."
											},
											"type": {
												"type": "reference",
												"name": "Object"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 606,
							"name": "sendMessage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "frontend/kojiBridge/index.ts",
									"line": 48,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 607,
									"name": "sendMessage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {},
									"parameters": [
										{
											"id": 608,
											"name": "postMessage",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Data to be sent to the Koji.\n"
											},
											"type": {
												"type": "reference",
												"name": "PostMessage"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 524,
										"name": "KojiBridge.sendMessage"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 523,
								"name": "KojiBridge.sendMessage"
							}
						},
						{
							"id": 609,
							"name": "sendMessageAndAwaitResponse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "frontend/kojiBridge/index.ts",
									"line": 67,
									"character": 39
								}
							],
							"signatures": [
								{
									"id": 610,
									"name": "sendMessageAndAwaitResponse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 611,
											"name": "postMessage",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Data to be sent to the Koji."
											},
											"type": {
												"type": "reference",
												"name": "PostMessage"
											}
										},
										{
											"id": 612,
											"name": "platformMessageName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 527,
										"name": "KojiBridge.sendMessageAndAwaitResponse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 526,
								"name": "KojiBridge.sendMessageAndAwaitResponse"
							}
						},
						{
							"id": 598,
							"name": "sendValues",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "frontend/remix/index.ts",
									"line": 188,
									"character": 26
								}
							],
							"signatures": [
								{
									"id": 599,
									"name": "sendValues",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sends an event to update the preview with the current remix data.",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 584,
							"name": "set",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"decorators": [
								{
									"name": "client",
									"type": {
										"type": "reference",
										"id": 405,
										"name": "client"
									}
								}
							],
							"sources": [
								{
									"fileName": "frontend/remix/index.ts",
									"line": 88,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 585,
									"name": "set",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Updates the specified values in the remix data.",
										"text": "<p class=\"note\">This method updates only the values that are specified in `newValue`. If other values exist, they not changed. To replace all remix data, use [[overwrite]].</p>\n",
										"returns": "Indicates whether the values were successfully updated.\n",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nawait Koji.remix.set({'myColor': color});\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 586,
											"name": "newValue",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Key-value pairs to update in the remix data."
											},
											"type": {
												"type": "reference",
												"name": "Object"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								575
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								578,
								577
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								595,
								592,
								600,
								590,
								582,
								579,
								587,
								606,
								609,
								598,
								584
							]
						}
					],
					"sources": [
						{
							"fileName": "frontend/remix/index.ts",
							"line": 24,
							"character": 18
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 514,
							"name": "KojiBridge"
						}
					]
				},
				{
					"id": 570,
					"name": "ValueChanged",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Communicates changes to remix data."
					},
					"children": [
						{
							"id": 572,
							"name": "newValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "New value."
							},
							"sources": [
								{
									"fileName": "frontend/remix/index.ts",
									"line": 16,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 571,
							"name": "path",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Path of the changed value."
							},
							"sources": [
								{
									"fileName": "frontend/remix/index.ts",
									"line": 14,
									"character": 6
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 573,
							"name": "savedValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Previous value."
							},
							"sources": [
								{
									"fileName": "frontend/remix/index.ts",
									"line": 18,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								572,
								571,
								573
							]
						}
					],
					"sources": [
						{
							"fileName": "frontend/remix/index.ts",
							"line": 12,
							"character": 29
						}
					]
				},
				{
					"id": 613,
					"name": "remix",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "frontend/remix/index.ts",
							"line": 205,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"id": 574,
						"name": "Remix"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						574
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						570
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						613
					]
				}
			],
			"sources": [
				{
					"fileName": "frontend/remix/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 614,
			"name": "frontend/serviceMap",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 619,
					"name": "ServiceMap",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Manages endpoints for the services running in your Koji."
					},
					"children": [
						{
							"id": 620,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 621,
									"name": "new ServiceMap",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 619,
										"name": "ServiceMap"
									}
								}
							]
						},
						{
							"id": 622,
							"name": "services",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Key-value pairs of services and endpoints."
							},
							"sources": [
								{
									"fileName": "frontend/serviceMap/index.ts",
									"line": 8,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"id": 615,
								"name": "Services"
							},
							"defaultValue": "..."
						},
						{
							"id": 623,
							"name": "config",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "frontend/serviceMap/index.ts",
									"line": 22,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 624,
									"name": "config",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the environment variables for the available services in the Koji. This method automatically scopes the variables for instant remixes of the original Koji.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nKoji.serviceMap.config({\n frontend: process.env.KOJI_SERVICE_URL_frontend\n});\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 625,
											"name": "envMap",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Key-value pairs of services and endpoints in the original Koji.\n"
											},
											"type": {
												"type": "reference",
												"id": 615,
												"name": "Services"
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								620
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								622
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								623
							]
						}
					],
					"sources": [
						{
							"fileName": "frontend/serviceMap/index.ts",
							"line": 6,
							"character": 23
						}
					]
				},
				{
					"id": 615,
					"name": "Services",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "frontend/serviceMap/index.ts",
							"line": 1,
							"character": 20
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 616,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "frontend/serviceMap/index.ts",
									"line": 1,
									"character": 22
								}
							],
							"indexSignature": {
								"id": 617,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 618,
										"name": "key",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					}
				},
				{
					"id": 626,
					"name": "serviceMap",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "frontend/serviceMap/index.ts",
							"line": 42,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"id": 619,
						"name": "ServiceMap"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						619
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						615
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						626
					]
				}
			],
			"sources": [
				{
					"fileName": "frontend/serviceMap/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 828,
			"name": "frontend/ui",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 829,
					"name": "UI",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 830,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 831,
									"name": "new UI",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 829,
										"name": "UI"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 516,
										"name": "KojiBridge.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 515,
								"name": "KojiBridge.constructor"
							}
						},
						{
							"id": 832,
							"name": "capture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "frontend/ui/index.ts",
									"line": 6,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 683,
								"name": "Capture"
							},
							"defaultValue": "..."
						},
						{
							"id": 833,
							"name": "present",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "frontend/ui/index.ts",
									"line": 7,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 857,
								"name": "Present"
							},
							"defaultValue": "..."
						},
						{
							"id": 834,
							"name": "execCallbackOnMessage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "frontend/kojiBridge/index.ts",
									"line": 28,
									"character": 33
								}
							],
							"signatures": [
								{
									"id": 835,
									"name": "execCallbackOnMessage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets a listener for a specific event, and invokes a function to handle the event.",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 836,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Function to run when the event is fired."
											},
											"type": {
												"type": "reference",
												"name": "Function"
											}
										},
										{
											"id": 837,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the event."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 838,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 839,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 518,
										"name": "KojiBridge.execCallbackOnMessage"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 517,
								"name": "KojiBridge.execCallbackOnMessage"
							}
						},
						{
							"id": 840,
							"name": "sendMessage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "frontend/kojiBridge/index.ts",
									"line": 48,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 841,
									"name": "sendMessage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {},
									"parameters": [
										{
											"id": 842,
											"name": "postMessage",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Data to be sent to the Koji.\n"
											},
											"type": {
												"type": "reference",
												"name": "PostMessage"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 524,
										"name": "KojiBridge.sendMessage"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 523,
								"name": "KojiBridge.sendMessage"
							}
						},
						{
							"id": 843,
							"name": "sendMessageAndAwaitResponse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "frontend/kojiBridge/index.ts",
									"line": 67,
									"character": 39
								}
							],
							"signatures": [
								{
									"id": 844,
									"name": "sendMessageAndAwaitResponse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 845,
											"name": "postMessage",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Data to be sent to the Koji."
											},
											"type": {
												"type": "reference",
												"name": "PostMessage"
											}
										},
										{
											"id": 846,
											"name": "platformMessageName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 527,
										"name": "KojiBridge.sendMessageAndAwaitResponse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 526,
								"name": "KojiBridge.sendMessageAndAwaitResponse"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								830
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								832,
								833
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								834,
								840,
								843
							]
						}
					],
					"sources": [
						{
							"fileName": "frontend/ui/index.ts",
							"line": 5,
							"character": 15
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 514,
							"name": "KojiBridge"
						}
					]
				},
				{
					"id": 847,
					"name": "ui",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "frontend/ui/index.ts",
							"line": 10,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"id": 829,
						"name": "UI"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						829
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						847
					]
				}
			],
			"sources": [
				{
					"fileName": "frontend/ui/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 627,
			"name": "frontend/ui/capture",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 683,
					"name": "Capture",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Captures user input on the frontend of your Koji."
					},
					"children": [
						{
							"id": 684,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 685,
									"name": "new Capture",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 683,
										"name": "Capture"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 516,
										"name": "KojiBridge.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 515,
								"name": "KojiBridge.constructor"
							}
						},
						{
							"id": 686,
							"name": "color",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "frontend/ui/capture/index.ts",
									"line": 206,
									"character": 7
								}
							],
							"signatures": [
								{
									"id": 687,
									"name": "color",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Prompts the user to select a color, either from a swatch or by entering a color code. Supports HEX, RGB, or HSL by default. Supports RBGA or HSLA, if transparency is enabled in the capture options.",
										"returns": "\n",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst color = await Koji.ui.capture.color();\n\n// Enable transparency and return an object\nconst color = await Koji.ui.capture.color({ allowAlpha: true, verbose: true });\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 688,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"id": 629,
												"name": "CaptureColorOptions"
											}
										},
										{
											"id": 689,
											"name": "verbose",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Indicates whether to return additional metadata about the capture event. If `false` or not specified, returns the color code as a string."
											},
											"type": {
												"type": "literal",
												"value": true
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 646,
												"name": "CaptureValue"
											}
										],
										"name": "Promise"
									}
								},
								{
									"id": 690,
									"name": "color",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 691,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 629,
												"name": "CaptureColorOptions"
											}
										},
										{
											"id": 692,
											"name": "verbose",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": false
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								},
								{
									"id": 693,
									"name": "color",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 694,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 629,
												"name": "CaptureColorOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								},
								{
									"id": 695,
									"name": "color",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 696,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 629,
												"name": "CaptureColorOptions"
											}
										},
										{
											"id": 697,
											"name": "verbose",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"id": 646,
														"name": "CaptureValue"
													}
												]
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 814,
							"name": "execCallbackOnMessage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "frontend/kojiBridge/index.ts",
									"line": 28,
									"character": 33
								}
							],
							"signatures": [
								{
									"id": 815,
									"name": "execCallbackOnMessage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets a listener for a specific event, and invokes a function to handle the event.",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 816,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Function to run when the event is fired."
											},
											"type": {
												"type": "reference",
												"name": "Function"
											}
										},
										{
											"id": 817,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the event."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 818,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 819,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 518,
										"name": "KojiBridge.execCallbackOnMessage"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 517,
								"name": "KojiBridge.execCallbackOnMessage"
							}
						},
						{
							"id": 698,
							"name": "file",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "frontend/ui/capture/index.ts",
									"line": 245,
									"character": 6
								}
							],
							"signatures": [
								{
									"id": 699,
									"name": "file",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Prompts the user to upload a file of any type. Use this method to allow the user to upload raw files in their original format. For example, to capture high-resolution images for download rather than for display in a browser.",
										"text": "To apply automatic transcoding and transformations for specific file types, use the associated method. See [[image]], [[video]], [[sound]], or [[media]].\n",
										"returns": "\n",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst file = await Koji.ui.capture.file();\n\n// Return an object\nconst file = await Koji.ui.capture.file({ verbose: true });\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 700,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"id": 628,
												"name": "CaptureOptions"
											}
										},
										{
											"id": 701,
											"name": "verbose",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Indicates whether to return additional metadata about the capture event. If `false` or not specified, returns the URL to the file as a string."
											},
											"type": {
												"type": "literal",
												"value": true
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 646,
												"name": "CaptureValue"
											}
										],
										"name": "Promise"
									}
								},
								{
									"id": 702,
									"name": "file",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 703,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 628,
												"name": "CaptureOptions"
											}
										},
										{
											"id": 704,
											"name": "verbose",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": false
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								},
								{
									"id": 705,
									"name": "file",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 706,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 628,
												"name": "CaptureOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								},
								{
									"id": 707,
									"name": "file",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 708,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 628,
												"name": "CaptureOptions"
											}
										},
										{
											"id": 709,
											"name": "verbose",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"id": 646,
														"name": "CaptureValue"
													}
												]
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 710,
							"name": "image",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "frontend/ui/capture/index.ts",
									"line": 284,
									"character": 7
								}
							],
							"signatures": [
								{
									"id": 711,
									"name": "image",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Prompts the user to select an image by selecting from the available asset packs, by uploading a file, or by entering a URL. Use this method when you want to limit the user to selecting an image.",
										"text": "To allow multiple types of media assets, see [[media]]. To allow upload of raw files of any type, see [[file]].\n",
										"returns": "\n",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst image = await Koji.ui.capture.image();\n\n// Hide asset packs and return an object\nconst image = await Koji.ui.capture.image({ hideExtensions: true, verbose: true });\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 712,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"id": 631,
												"name": "CaptureImageOptions"
											}
										},
										{
											"id": 713,
											"name": "verbose",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Indicates whether to return additional metadata about the capture event. If `false` or not specified, returns the URL to the image asset as a string."
											},
											"type": {
												"type": "literal",
												"value": true
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 646,
												"name": "CaptureValue"
											}
										],
										"name": "Promise"
									}
								},
								{
									"id": 714,
									"name": "image",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 715,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 631,
												"name": "CaptureImageOptions"
											}
										},
										{
											"id": 716,
											"name": "verbose",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": false
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								},
								{
									"id": 717,
									"name": "image",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 718,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 631,
												"name": "CaptureImageOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								},
								{
									"id": 719,
									"name": "image",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 720,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 631,
												"name": "CaptureImageOptions"
											}
										},
										{
											"id": 721,
											"name": "verbose",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"id": 646,
														"name": "CaptureValue"
													}
												]
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 722,
							"name": "koji",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "frontend/ui/capture/index.ts",
									"line": 321,
									"character": 6
								}
							],
							"signatures": [
								{
									"id": 723,
									"name": "koji",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Prompts the user to create a new Koji or select an existing Koji, either from the user’s profile or from a URL.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst koji = await Koji.ui.capture.koji();\n\n// Return an object\nconst koji = await Koji.ui.capture.koji({ verbose: true });\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 724,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"id": 628,
												"name": "CaptureOptions"
											}
										},
										{
											"id": 725,
											"name": "verbose",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Indicates whether to return additional metadata about the capture event. If `false` or not specified, returns the URL to the Koji as a string.\n"
											},
											"type": {
												"type": "literal",
												"value": true
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 646,
												"name": "CaptureValue"
											}
										],
										"name": "Promise"
									}
								},
								{
									"id": 726,
									"name": "koji",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 727,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 628,
												"name": "CaptureOptions"
											}
										},
										{
											"id": 728,
											"name": "verbose",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": false
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								},
								{
									"id": 729,
									"name": "koji",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 730,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 628,
												"name": "CaptureOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								},
								{
									"id": 731,
									"name": "koji",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 732,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 628,
												"name": "CaptureOptions"
											}
										},
										{
											"id": 733,
											"name": "verbose",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"id": 646,
														"name": "CaptureValue"
													}
												]
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 734,
							"name": "media",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "frontend/ui/capture/index.ts",
									"line": 358,
									"character": 7
								}
							],
							"signatures": [
								{
									"id": 735,
									"name": "media",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Prompts the user to select an image, file, sound, or video by selecting from the available asset packs, by uploading a file, or by entering a URL. Use this method to allow the user to select from more than one type of media with a single control. For example, allow the user to select an image or a video. You can limit the types of media to allow and configure options for each allowed type.",
										"returns": "\n",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst media = await Koji.ui.capture.media();\n\n// Limit to image or video, hide asset packs, return an object with extended metadata, transcode videos for HLS\nconst media = await Koji.ui.capture.media({ acceptOnly: [image,video], hideExtensions: true, returnType: 'extended', videoOptions: { hls: true }, verbose: true });\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 736,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 737,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 738,
															"name": "returnType",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "frontend/ui/capture/index.ts",
																	"line": 358,
																	"character": 29
																}
															],
															"type": {
																"type": "literal",
																"value": "url"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																738
															]
														}
													]
												}
											}
										},
										{
											"id": 739,
											"name": "verbose",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Indicates whether to return additional metadata about the capture event. If `false` or not specified, returns only the value of the media capture, which is either the URL to the media as a string or an object with the URL and additional metadata."
											},
											"type": {
												"type": "literal",
												"value": true
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 646,
												"name": "CaptureValue"
											}
										],
										"name": "Promise"
									}
								},
								{
									"id": 740,
									"name": "media",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 741,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 742,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 743,
															"name": "returnType",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "frontend/ui/capture/index.ts",
																	"line": 359,
																	"character": 29
																}
															],
															"type": {
																"type": "literal",
																"value": "url"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																743
															]
														}
													]
												}
											}
										},
										{
											"id": 744,
											"name": "verbose",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": false
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								},
								{
									"id": 745,
									"name": "media",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 746,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 747,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 748,
															"name": "returnType",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "frontend/ui/capture/index.ts",
																	"line": 360,
																	"character": 29
																}
															],
															"type": {
																"type": "literal",
																"value": "extended"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																748
															]
														}
													]
												}
											}
										},
										{
											"id": 749,
											"name": "verbose",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": true
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 650,
												"name": "MediaCaptureValue"
											}
										],
										"name": "Promise"
									}
								},
								{
									"id": 750,
									"name": "media",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 751,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 752,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 753,
															"name": "returnType",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "frontend/ui/capture/index.ts",
																	"line": 361,
																	"character": 29
																}
															],
															"type": {
																"type": "literal",
																"value": "extended"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																753
															]
														}
													]
												}
											}
										},
										{
											"id": 754,
											"name": "verbose",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": false
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 661,
												"name": "ExtendedCaptureMediaValue"
											}
										],
										"name": "Promise"
									}
								},
								{
									"id": 755,
									"name": "media",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 756,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 640,
												"name": "CaptureMediaOptions"
											}
										},
										{
											"id": 757,
											"name": "verbose",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": true
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 650,
												"name": "MediaCaptureValue"
											}
										],
										"name": "Promise"
									}
								},
								{
									"id": 758,
									"name": "media",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 759,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 640,
												"name": "CaptureMediaOptions"
											}
										},
										{
											"id": 760,
											"name": "verbose",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": false
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 661,
												"name": "ExtendedCaptureMediaValue"
											}
										],
										"name": "Promise"
									}
								},
								{
									"id": 761,
									"name": "media",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 762,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 640,
												"name": "CaptureMediaOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 661,
												"name": "ExtendedCaptureMediaValue"
											}
										],
										"name": "Promise"
									}
								},
								{
									"id": 763,
									"name": "media",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 764,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 640,
												"name": "CaptureMediaOptions"
											}
										},
										{
											"id": 765,
											"name": "verbose",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"id": 646,
														"name": "CaptureValue"
													},
													{
														"type": "reference",
														"id": 650,
														"name": "MediaCaptureValue"
													},
													{
														"type": "reference",
														"id": 661,
														"name": "ExtendedCaptureMediaValue"
													}
												]
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 766,
							"name": "range",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "frontend/ui/capture/index.ts",
									"line": 399,
									"character": 7
								}
							],
							"signatures": [
								{
									"id": 767,
									"name": "range",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Prompts the user to select a numeric value within a certain range. You can configure the minimum value, maximum value, and default increment.",
										"returns": "Numeric value as a string or the [[CaptureValue]] object, if `verbose` is `true`.\n",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst size = await Koji.ui.capture.range();\n\n// Return an object\nconst size = await Koji.ui.capture.range({ min: 0, max: 60, step: 3, verbose: true });\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 768,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"id": 668,
												"name": "CaptureRangeOptions"
											}
										},
										{
											"id": 769,
											"name": "verbose",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Indicates whether to return additional metadata about the capture event. If `false` or not specified, returns the numeric value as a string."
											},
											"type": {
												"type": "literal",
												"value": true
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 646,
												"name": "CaptureValue"
											}
										],
										"name": "Promise"
									}
								},
								{
									"id": 770,
									"name": "range",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 771,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 668,
												"name": "CaptureRangeOptions"
											}
										},
										{
											"id": 772,
											"name": "verbose",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": false
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								},
								{
									"id": 773,
									"name": "range",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 774,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 668,
												"name": "CaptureRangeOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								},
								{
									"id": 775,
									"name": "range",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 776,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 668,
												"name": "CaptureRangeOptions"
											}
										},
										{
											"id": 777,
											"name": "verbose",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"id": 646,
														"name": "CaptureValue"
													}
												]
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 778,
							"name": "select",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "frontend/ui/capture/index.ts",
									"line": 441,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 779,
									"name": "select",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Prompts the user to select from a predefined list of options.",
										"returns": "Value of the predefined option as a string or the [[CaptureValue]] object, if `verbose` is `true`.\n",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst option = await Koji.ui.capture.select();\n\n// Select from three options\nconst option = await Koji.ui.capture.select(\n { options: [\n   { value: \"one\", label: \"Option one\" },\n   { value: \"two\", label: \"Option two\" },\n   { value: \"three\", label: \"Option three\" }],\n   placeholder: \"Choose an option\"});\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 780,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"id": 675,
												"name": "CaptureSelectOptions"
											}
										},
										{
											"id": 781,
											"name": "verbose",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Indicates whether to return additional metadata about the capture event. If `false` or not specified, returns the option as a string."
											},
											"type": {
												"type": "literal",
												"value": true
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 646,
												"name": "CaptureValue"
											}
										],
										"name": "Promise"
									}
								},
								{
									"id": 782,
									"name": "select",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 783,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 675,
												"name": "CaptureSelectOptions"
											}
										},
										{
											"id": 784,
											"name": "verbose",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": false
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								},
								{
									"id": 785,
									"name": "select",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 786,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 675,
												"name": "CaptureSelectOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								},
								{
									"id": 787,
									"name": "select",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 788,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 675,
												"name": "CaptureSelectOptions"
											}
										},
										{
											"id": 789,
											"name": "verbose",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"id": 646,
														"name": "CaptureValue"
													}
												]
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 820,
							"name": "sendMessage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "frontend/kojiBridge/index.ts",
									"line": 48,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 821,
									"name": "sendMessage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {},
									"parameters": [
										{
											"id": 822,
											"name": "postMessage",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Data to be sent to the Koji.\n"
											},
											"type": {
												"type": "reference",
												"name": "PostMessage"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 524,
										"name": "KojiBridge.sendMessage"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 523,
								"name": "KojiBridge.sendMessage"
							}
						},
						{
							"id": 823,
							"name": "sendMessageAndAwaitResponse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "frontend/kojiBridge/index.ts",
									"line": 67,
									"character": 39
								}
							],
							"signatures": [
								{
									"id": 824,
									"name": "sendMessageAndAwaitResponse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 825,
											"name": "postMessage",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Data to be sent to the Koji."
											},
											"type": {
												"type": "reference",
												"name": "PostMessage"
											}
										},
										{
											"id": 826,
											"name": "platformMessageName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 527,
										"name": "KojiBridge.sendMessageAndAwaitResponse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 526,
								"name": "KojiBridge.sendMessageAndAwaitResponse"
							}
						},
						{
							"id": 790,
							"name": "sound",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "frontend/ui/capture/index.ts",
									"line": 480,
									"character": 7
								}
							],
							"signatures": [
								{
									"id": 791,
									"name": "sound",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Prompts the user to select a sound by selecting from the available asset packs, by uploading a file, or by entering a URL. Use this method when you want to limit the user to selecting a sound.",
										"text": "To allow multiple types of media assets, see [[media]]. To allow upload of raw files of any type, see [[file]].\n",
										"returns": "URL to the audio asset as a string or the [[CaptureValue]] object, if `verbose` is `true`.\n",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst sound = await Koji.ui.capture.sound();\n\n// Hide asset packs and return an object\nconst sound = await Koji.ui.capture.sound({ hideExtensions: true, verbose: true });\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 792,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"id": 678,
												"name": "CaptureSoundOptions"
											}
										},
										{
											"id": 793,
											"name": "verbose",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Indicates whether to return additional metadata about the capture event. If `false` or not specified, returns the URL to the audio asset as a string."
											},
											"type": {
												"type": "literal",
												"value": true
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 646,
												"name": "CaptureValue"
											}
										],
										"name": "Promise"
									}
								},
								{
									"id": 794,
									"name": "sound",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 795,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 678,
												"name": "CaptureSoundOptions"
											}
										},
										{
											"id": 796,
											"name": "verbose",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": false
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								},
								{
									"id": 797,
									"name": "sound",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 798,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 678,
												"name": "CaptureSoundOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								},
								{
									"id": 799,
									"name": "sound",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 800,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 678,
												"name": "CaptureSoundOptions"
											}
										},
										{
											"id": 801,
											"name": "verbose",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"id": 646,
														"name": "CaptureValue"
													}
												]
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 802,
							"name": "video",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "frontend/ui/capture/index.ts",
									"line": 517,
									"character": 7
								}
							],
							"signatures": [
								{
									"id": 803,
									"name": "video",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "\n",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst video = await Koji.ui.capture.video();\n\n// Transcode for HLS and return an object\nconst video = await Koji.ui.capture.video({ hls: true, verbose: true });\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 804,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"id": 680,
												"name": "CaptureVideoOptions"
											}
										},
										{
											"id": 805,
											"name": "verbose",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "literal",
												"value": true
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 646,
												"name": "CaptureValue"
											}
										],
										"name": "Promise"
									}
								},
								{
									"id": 806,
									"name": "video",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 807,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 680,
												"name": "CaptureVideoOptions"
											}
										},
										{
											"id": 808,
											"name": "verbose",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": false
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								},
								{
									"id": 809,
									"name": "video",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 810,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 680,
												"name": "CaptureVideoOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								},
								{
									"id": 811,
									"name": "video",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 812,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 680,
												"name": "CaptureVideoOptions"
											}
										},
										{
											"id": 813,
											"name": "verbose",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"id": 646,
														"name": "CaptureValue"
													}
												]
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								684
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								686,
								814,
								698,
								710,
								722,
								734,
								766,
								778,
								820,
								823,
								790,
								802
							]
						}
					],
					"sources": [
						{
							"fileName": "frontend/ui/capture/index.ts",
							"line": 190,
							"character": 20
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 514,
							"name": "KojiBridge"
						}
					]
				},
				{
					"id": 629,
					"name": "CaptureColorOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Configuration options for a [[color]] capture."
					},
					"children": [
						{
							"id": 630,
							"name": "allowAlpha",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates whether to support transparency (`false`, by default)."
							},
							"sources": [
								{
									"fileName": "frontend/ui/capture/index.ts",
									"line": 14,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								630
							]
						}
					],
					"sources": [
						{
							"fileName": "frontend/ui/capture/index.ts",
							"line": 12,
							"character": 36
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 628,
							"name": "CaptureOptions"
						}
					]
				},
				{
					"id": 631,
					"name": "CaptureImageOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Configuration options for an [[image]] capture."
					},
					"children": [
						{
							"id": 632,
							"name": "hideExtensions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Whether to hide all asset packs and VCC extensions. Enable this option in cases where they do not make sense (for example, Kojis for selling premium images)."
							},
							"sources": [
								{
									"fileName": "frontend/ui/capture/index.ts",
									"line": 22,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								632
							]
						}
					],
					"sources": [
						{
							"fileName": "frontend/ui/capture/index.ts",
							"line": 20,
							"character": 36
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 628,
							"name": "CaptureOptions"
						}
					]
				},
				{
					"id": 638,
					"name": "CaptureMediaImageOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Configuration options for an [[media]] capture of an image file."
					},
					"children": [
						{
							"id": 639,
							"name": "width",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Resizes the image to the specified width."
							},
							"sources": [
								{
									"fileName": "frontend/ui/capture/index.ts",
									"line": 50,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								639
							]
						}
					],
					"sources": [
						{
							"fileName": "frontend/ui/capture/index.ts",
							"line": 48,
							"character": 41
						}
					]
				},
				{
					"id": 640,
					"name": "CaptureMediaOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Configuration options for a [[media]] capture."
					},
					"children": [
						{
							"id": 641,
							"name": "acceptOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Specifies the types of media files to allow. If empty or not specified, any type of file is allowed."
							},
							"sources": [
								{
									"fileName": "frontend/ui/capture/index.ts",
									"line": 58,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 633,
											"name": "CaptureMediaAcceptOnly"
										}
									}
								]
							}
						},
						{
							"id": 643,
							"name": "hideExtensions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Whether to hide all asset packs and VCC extensions. Enable this option in cases where they do not make sense (for example, when uploading premium content)."
							},
							"sources": [
								{
									"fileName": "frontend/ui/capture/index.ts",
									"line": 62,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								]
							}
						},
						{
							"id": 645,
							"name": "imageOptions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Specifies the configuration options for image files."
							},
							"sources": [
								{
									"fileName": "frontend/ui/capture/index.ts",
									"line": 66,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 638,
										"name": "CaptureMediaImageOptions"
									}
								]
							}
						},
						{
							"id": 642,
							"name": "returnType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Specifies the type of the return value for the capture. If empty or not specified, `extended` data is returned."
							},
							"sources": [
								{
									"fileName": "frontend/ui/capture/index.ts",
									"line": 60,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "literal",
										"value": "url"
									},
									{
										"type": "literal",
										"value": "extended"
									}
								]
							}
						},
						{
							"id": 644,
							"name": "videoOptions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Specifies the configuration options for video files."
							},
							"sources": [
								{
									"fileName": "frontend/ui/capture/index.ts",
									"line": 64,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 635,
										"name": "CaptureMediaVideoOptions"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								641,
								643,
								645,
								642,
								644
							]
						}
					],
					"sources": [
						{
							"fileName": "frontend/ui/capture/index.ts",
							"line": 56,
							"character": 36
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 628,
							"name": "CaptureOptions"
						}
					]
				},
				{
					"id": 635,
					"name": "CaptureMediaVideoOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Configuration options for a [[media]] capture of a video file."
					},
					"children": [
						{
							"id": 637,
							"name": "estimatePoses",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Generates pose detection data. When enabled, pose data is available after upload by appending `.poses` to the returned file URL. For example, `https://objects.koji-cdn.com/project-id/my-video.mp4.poses`."
							},
							"sources": [
								{
									"fileName": "frontend/ui/capture/index.ts",
									"line": 42,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 636,
							"name": "hls",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Enables HTTP Live Streaming (HLS) for delivery of longer content. When enabled, uploaded videos are transcoded for HLS and return an m3u8 playlist. Use this feature in conjunction with [[https://github.com/video-dev/hls.js/ | hls.js]] for controlling playback."
							},
							"sources": [
								{
									"fileName": "frontend/ui/capture/index.ts",
									"line": 40,
									"character": 5
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								637,
								636
							]
						}
					],
					"sources": [
						{
							"fileName": "frontend/ui/capture/index.ts",
							"line": 38,
							"character": 41
						}
					]
				},
				{
					"id": 628,
					"name": "CaptureOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Configuration options for the capture. The available options vary by type."
					},
					"sources": [
						{
							"fileName": "frontend/ui/capture/index.ts",
							"line": 7,
							"character": 31
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 629,
							"name": "CaptureColorOptions"
						},
						{
							"type": "reference",
							"id": 631,
							"name": "CaptureImageOptions"
						},
						{
							"type": "reference",
							"id": 640,
							"name": "CaptureMediaOptions"
						},
						{
							"type": "reference",
							"id": 668,
							"name": "CaptureRangeOptions"
						},
						{
							"type": "reference",
							"id": 675,
							"name": "CaptureSelectOptions"
						},
						{
							"type": "reference",
							"id": 678,
							"name": "CaptureSoundOptions"
						},
						{
							"type": "reference",
							"id": 680,
							"name": "CaptureVideoOptions"
						}
					]
				},
				{
					"id": 668,
					"name": "CaptureRangeOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Configuration options for a [[range]] capture."
					},
					"children": [
						{
							"id": 670,
							"name": "max",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Maximum value. Default is `100`."
							},
							"sources": [
								{
									"fileName": "frontend/ui/capture/index.ts",
									"line": 144,
									"character": 5
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 669,
							"name": "min",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Minimum value. Default is `0`."
							},
							"sources": [
								{
									"fileName": "frontend/ui/capture/index.ts",
									"line": 142,
									"character": 5
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 671,
							"name": "step",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Default increment/step size. Default is `1`."
							},
							"sources": [
								{
									"fileName": "frontend/ui/capture/index.ts",
									"line": 146,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								670,
								669,
								671
							]
						}
					],
					"sources": [
						{
							"fileName": "frontend/ui/capture/index.ts",
							"line": 140,
							"character": 36
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 628,
							"name": "CaptureOptions"
						}
					]
				},
				{
					"id": 675,
					"name": "CaptureSelectOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Configuration options for a [[select]] capture."
					},
					"children": [
						{
							"id": 677,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "List of predefined options."
							},
							"sources": [
								{
									"fileName": "frontend/ui/capture/index.ts",
									"line": 166,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 672,
											"name": "CaptureSelectOptionsOption"
										}
									}
								]
							}
						},
						{
							"id": 676,
							"name": "placeholder",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Description of the selection for users."
							},
							"sources": [
								{
									"fileName": "frontend/ui/capture/index.ts",
									"line": 164,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								677,
								676
							]
						}
					],
					"sources": [
						{
							"fileName": "frontend/ui/capture/index.ts",
							"line": 162,
							"character": 37
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 628,
							"name": "CaptureOptions"
						}
					]
				},
				{
					"id": 672,
					"name": "CaptureSelectOptionsOption",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "One of the predefined options for a [[select]] capture."
					},
					"children": [
						{
							"id": 674,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Description of the option for users."
							},
							"sources": [
								{
									"fileName": "frontend/ui/capture/index.ts",
									"line": 156,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 673,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Value to return if the option is selected."
							},
							"sources": [
								{
									"fileName": "frontend/ui/capture/index.ts",
									"line": 154,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								674,
								673
							]
						}
					],
					"sources": [
						{
							"fileName": "frontend/ui/capture/index.ts",
							"line": 152,
							"character": 43
						}
					]
				},
				{
					"id": 678,
					"name": "CaptureSoundOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Configuration options for a [[sound]] capture."
					},
					"children": [
						{
							"id": 679,
							"name": "hideExtensions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Whether to hide all asset packs and VCC extensions. Enable this option in cases where they do not make sense (for example, Kojis for selling premium sounds)."
							},
							"sources": [
								{
									"fileName": "frontend/ui/capture/index.ts",
									"line": 174,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								679
							]
						}
					],
					"sources": [
						{
							"fileName": "frontend/ui/capture/index.ts",
							"line": 172,
							"character": 36
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 628,
							"name": "CaptureOptions"
						}
					]
				},
				{
					"id": 646,
					"name": "CaptureValue",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Result of a user input capture."
					},
					"children": [
						{
							"id": 647,
							"name": "result",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Value captured from the user."
							},
							"sources": [
								{
									"fileName": "frontend/ui/capture/index.ts",
									"line": 74,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 648,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Whether the user completed the selection (`succeeded`) or exited the control without selecting a value (`cancelled`)."
							},
							"sources": [
								{
									"fileName": "frontend/ui/capture/index.ts",
									"line": 76,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 649,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Capture method type (for example, `color` or `file`)."
							},
							"sources": [
								{
									"fileName": "frontend/ui/capture/index.ts",
									"line": 78,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								647,
								648,
								649
							]
						}
					],
					"sources": [
						{
							"fileName": "frontend/ui/capture/index.ts",
							"line": 72,
							"character": 29
						}
					]
				},
				{
					"id": 680,
					"name": "CaptureVideoOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Configuration options for a [[video]] capture."
					},
					"children": [
						{
							"id": 682,
							"name": "estimatePoses",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Generates pose detection data. When enabled, pose data is available after upload by appending `.poses` to the returned file URL. For example, `https://objects.koji-cdn.com/project-id/my-video.mp4.poses`."
							},
							"sources": [
								{
									"fileName": "frontend/ui/capture/index.ts",
									"line": 184,
									"character": 15
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								]
							}
						},
						{
							"id": 681,
							"name": "hls",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Enables HTTP Live Streaming (HLS) for delivery of longer content. When enabled, uploaded videos are transcoded for HLS and return an m3u8 playlist. Use this feature in conjunction with [[https://github.com/video-dev/hls.js/ | hls.js]] for controlling playback."
							},
							"sources": [
								{
									"fileName": "frontend/ui/capture/index.ts",
									"line": 182,
									"character": 5
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								682,
								681
							]
						}
					],
					"sources": [
						{
							"fileName": "frontend/ui/capture/index.ts",
							"line": 180,
							"character": 36
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 628,
							"name": "CaptureOptions"
						}
					]
				},
				{
					"id": 656,
					"name": "ExtendedCaptureMediaAudioMetadata",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Metadata for an audio file."
					},
					"children": [
						{
							"id": 657,
							"name": "durationSeconds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Duration in seconds for an audio file."
							},
							"sources": [
								{
									"fileName": "frontend/ui/capture/index.ts",
									"line": 106,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								657
							]
						}
					],
					"sources": [
						{
							"fileName": "frontend/ui/capture/index.ts",
							"line": 104,
							"character": 50
						}
					]
				},
				{
					"id": 658,
					"name": "ExtendedCaptureMediaImageMetadata",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Metadata for an image file."
					},
					"children": [
						{
							"id": 660,
							"name": "naturalHeight",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Natural height of the image in pixels."
							},
							"sources": [
								{
									"fileName": "frontend/ui/capture/index.ts",
									"line": 116,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 659,
							"name": "naturalWidth",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Natural width of the image in pixels."
							},
							"sources": [
								{
									"fileName": "frontend/ui/capture/index.ts",
									"line": 114,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								660,
								659
							]
						}
					],
					"sources": [
						{
							"fileName": "frontend/ui/capture/index.ts",
							"line": 112,
							"character": 50
						}
					]
				},
				{
					"id": 661,
					"name": "ExtendedCaptureMediaValue",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Metadata when the capture option for the return type is set to `extended`."
					},
					"children": [
						{
							"id": 666,
							"name": "audioMetadata",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Metadata for an audio file."
							},
							"sources": [
								{
									"fileName": "frontend/ui/capture/index.ts",
									"line": 132,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"id": 656,
								"name": "ExtendedCaptureMediaAudioMetadata"
							}
						},
						{
							"id": 667,
							"name": "imageMetadata",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Metadata for an image file."
							},
							"sources": [
								{
									"fileName": "frontend/ui/capture/index.ts",
									"line": 134,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"id": 658,
								"name": "ExtendedCaptureMediaImageMetadata"
							}
						},
						{
							"id": 664,
							"name": "sizeBytes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Size in bytes of the media file."
							},
							"sources": [
								{
									"fileName": "frontend/ui/capture/index.ts",
									"line": 128,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 663,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Type of media: `image`, `video`, `audio`, or `file`."
							},
							"sources": [
								{
									"fileName": "frontend/ui/capture/index.ts",
									"line": 126,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 662,
							"name": "url",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "URL of the selected media file."
							},
							"sources": [
								{
									"fileName": "frontend/ui/capture/index.ts",
									"line": 124,
									"character": 5
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 665,
							"name": "videoMetadata",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Metadata for a video file."
							},
							"sources": [
								{
									"fileName": "frontend/ui/capture/index.ts",
									"line": 130,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"id": 654,
								"name": "ExtendedCaptureMediaVideoMetadata"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								666,
								667,
								664,
								663,
								662,
								665
							]
						}
					],
					"sources": [
						{
							"fileName": "frontend/ui/capture/index.ts",
							"line": 122,
							"character": 42
						}
					]
				},
				{
					"id": 654,
					"name": "ExtendedCaptureMediaVideoMetadata",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Metadata for a video file."
					},
					"children": [
						{
							"id": 655,
							"name": "thumbnailUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "URL for the video thumbnail."
							},
							"sources": [
								{
									"fileName": "frontend/ui/capture/index.ts",
									"line": 98,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								655
							]
						}
					],
					"sources": [
						{
							"fileName": "frontend/ui/capture/index.ts",
							"line": 96,
							"character": 50
						}
					]
				},
				{
					"id": 650,
					"name": "MediaCaptureValue",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Result of a [[media]] file capture."
					},
					"children": [
						{
							"id": 651,
							"name": "result",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Value captured from the user."
							},
							"sources": [
								{
									"fileName": "frontend/ui/capture/index.ts",
									"line": 86,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 661,
								"name": "ExtendedCaptureMediaValue"
							}
						},
						{
							"id": 652,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Whether the user completed the selection (`succeeded`) or exited the control without selecting a value (`cancelled`)."
							},
							"sources": [
								{
									"fileName": "frontend/ui/capture/index.ts",
									"line": 88,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 653,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Capture method type (for example, `color` or `file`)."
							},
							"sources": [
								{
									"fileName": "frontend/ui/capture/index.ts",
									"line": 90,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								651,
								652,
								653
							]
						}
					],
					"sources": [
						{
							"fileName": "frontend/ui/capture/index.ts",
							"line": 84,
							"character": 34
						}
					]
				},
				{
					"id": 633,
					"name": "CaptureMediaAcceptOnly",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Types of files to allow for a [[media]] capture. The [[CaptureMediaOptions | configuration options]] vary by media file type."
					},
					"sources": [
						{
							"fileName": "frontend/ui/capture/index.ts",
							"line": 28,
							"character": 34
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "image"
							},
							{
								"type": "literal",
								"value": "video"
							},
							{
								"type": "literal",
								"value": "audio"
							},
							{
								"type": "literal",
								"value": "file"
							}
						]
					}
				},
				{
					"id": 634,
					"name": "CaptureMediaReturnType",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Type of value to return for a [[media]] capture. Either the URL to the media as a string or an object with the URL and additional metadata."
					},
					"sources": [
						{
							"fileName": "frontend/ui/capture/index.ts",
							"line": 33,
							"character": 34
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "url"
							},
							{
								"type": "literal",
								"value": "extended"
							}
						]
					}
				},
				{
					"id": 827,
					"name": "capture",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "frontend/ui/capture/index.ts",
							"line": 540,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"id": 683,
						"name": "Capture"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						683
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						629,
						631,
						638,
						640,
						635,
						628,
						668,
						675,
						672,
						678,
						646,
						680,
						656,
						658,
						661,
						654,
						650
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						633,
						634
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						827
					]
				}
			],
			"sources": [
				{
					"fileName": "frontend/ui/capture/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 848,
			"name": "frontend/ui/present",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 857,
					"name": "Present",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 858,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 859,
									"name": "new Present",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 857,
										"name": "Present"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 516,
										"name": "KojiBridge.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 515,
								"name": "KojiBridge.constructor"
							}
						},
						{
							"id": 863,
							"name": "alert",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"decorators": [
								{
									"name": "client",
									"type": {
										"type": "reference",
										"id": 405,
										"name": "client"
									}
								}
							],
							"sources": [
								{
									"fileName": "frontend/ui/present/index.ts",
									"line": 36,
									"character": 7
								}
							],
							"signatures": [
								{
									"id": 864,
									"name": "alert",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 865,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 849,
												"name": "PresentConfirmationOptions"
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 860,
							"name": "confirmation",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"decorators": [
								{
									"name": "client",
									"type": {
										"type": "reference",
										"id": 405,
										"name": "client"
									}
								}
							],
							"sources": [
								{
									"fileName": "frontend/ui/present/index.ts",
									"line": 18,
									"character": 20
								}
							],
							"signatures": [
								{
									"id": 861,
									"name": "confirmation",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 862,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 849,
												"name": "PresentConfirmationOptions"
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 866,
							"name": "execCallbackOnMessage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "frontend/kojiBridge/index.ts",
									"line": 28,
									"character": 33
								}
							],
							"signatures": [
								{
									"id": 867,
									"name": "execCallbackOnMessage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets a listener for a specific event, and invokes a function to handle the event.",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 868,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Function to run when the event is fired."
											},
											"type": {
												"type": "reference",
												"name": "Function"
											}
										},
										{
											"id": 869,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the event."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 870,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 871,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 518,
										"name": "KojiBridge.execCallbackOnMessage"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 517,
								"name": "KojiBridge.execCallbackOnMessage"
							}
						},
						{
							"id": 872,
							"name": "sendMessage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "frontend/kojiBridge/index.ts",
									"line": 48,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 873,
									"name": "sendMessage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {},
									"parameters": [
										{
											"id": 874,
											"name": "postMessage",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Data to be sent to the Koji.\n"
											},
											"type": {
												"type": "reference",
												"name": "PostMessage"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 524,
										"name": "KojiBridge.sendMessage"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 523,
								"name": "KojiBridge.sendMessage"
							}
						},
						{
							"id": 875,
							"name": "sendMessageAndAwaitResponse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "frontend/kojiBridge/index.ts",
									"line": 67,
									"character": 39
								}
							],
							"signatures": [
								{
									"id": 876,
									"name": "sendMessageAndAwaitResponse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 877,
											"name": "postMessage",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Data to be sent to the Koji."
											},
											"type": {
												"type": "reference",
												"name": "PostMessage"
											}
										},
										{
											"id": 878,
											"name": "platformMessageName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 527,
										"name": "KojiBridge.sendMessageAndAwaitResponse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 526,
								"name": "KojiBridge.sendMessageAndAwaitResponse"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								858
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								863,
								860,
								866,
								872,
								875
							]
						}
					],
					"sources": [
						{
							"fileName": "frontend/ui/present/index.ts",
							"line": 16,
							"character": 20
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 514,
							"name": "KojiBridge"
						}
					]
				},
				{
					"id": 854,
					"name": "PresentAlertOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 856,
							"name": "message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "frontend/ui/present/index.ts",
									"line": 13,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 855,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "frontend/ui/present/index.ts",
									"line": 12,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								856,
								855
							]
						}
					],
					"sources": [
						{
							"fileName": "frontend/ui/present/index.ts",
							"line": 11,
							"character": 36
						}
					]
				},
				{
					"id": 849,
					"name": "PresentConfirmationOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 853,
							"name": "cancelButtonLabel",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "frontend/ui/present/index.ts",
									"line": 8,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 852,
							"name": "confirmButtonLabel",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "frontend/ui/present/index.ts",
									"line": 7,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 851,
							"name": "message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "frontend/ui/present/index.ts",
									"line": 6,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 850,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "frontend/ui/present/index.ts",
									"line": 5,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								853,
								852,
								851,
								850
							]
						}
					],
					"sources": [
						{
							"fileName": "frontend/ui/present/index.ts",
							"line": 4,
							"character": 43
						}
					]
				},
				{
					"id": 879,
					"name": "present",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "frontend/ui/present/index.ts",
							"line": 51,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"id": 857,
						"name": "Present"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						857
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						854,
						849
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						879
					]
				}
			],
			"sources": [
				{
					"fileName": "frontend/ui/present/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 880,
			"name": "global",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 881,
					"name": "UserToken",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Temporary token for the current user’s session, or `null` if the user is not logged in.",
						"text": "A user token is created when a logged-in user loads a Koji, and destroyed when the user closes the Koji. If the user revisits the Koji, a different token is generated. Tokens are specific to a user and a Koji, so the same user will have different tokens for different Kojis.\n\n"
					},
					"sources": [
						{
							"fileName": "global.d.ts",
							"line": 7,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "literal",
								"value": null
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						881
					]
				}
			]
		},
		{
			"id": 882,
			"name": "index",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 888,
					"name": "KojiBackend",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 368
				},
				{
					"id": 889,
					"name": "default",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 512
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						888,
						889
					]
				}
			],
			"sources": [
				{
					"fileName": "index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 883,
			"name": "utils/equalsIgnoreOrder",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 884,
					"name": "equalsIgnoreOrder",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "utils/equalsIgnoreOrder.ts",
							"line": 3,
							"character": 30
						}
					],
					"signatures": [
						{
							"id": 885,
							"name": "equalsIgnoreOrder",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 886,
									"name": "a",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								},
								{
									"id": 887,
									"name": "b",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						884
					]
				}
			],
			"sources": [
				{
					"fileName": "utils/equalsIgnoreOrder.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"kind": 1,
			"children": [
				367,
				1,
				8,
				7,
				29,
				28,
				175,
				256,
				326,
				381,
				387,
				482,
				404,
				410,
				422,
				452,
				451,
				513,
				530,
				569,
				614,
				828,
				627,
				848,
				880,
				882,
				883
			]
		}
	]
}