{"version":3,"sources":["../../src/frontend/index.ts"],"names":["Koji","analytics","dispatch","iap","identity","playerState","remix","ui","web3Provider","isReady","kojiConfig","kojiConfigOptions","services","configInitialized","Error","window","KOJI_FEED_KEY","feedKey","location","hash","replace","develop","deploy","remixData","resolveMetadata","projectId","metadata","resolveServices","init","explicitProjectId","process","env","KOJI_PROJECT_ID","creatorUsername","KOJI_CREATOR_USERNAME","creatorProfilePicture","KOJI_CREATOR_PROFILE_PICTURE","KOJI_OVERRIDES","overrides","setProjectId","developServices","Object","keys","deployServices","length","baseServiceMap","forEach","serviceName","serviceMap","addEventListener","e","clientX","clientY","parent","postMessage","_type","_feedKey","x","y","err","capture","passive","data","origin","_path","destinationOrigin","frame","Array","from","document","getElementsByTagName","find","src","startsWith","contentWindow","originalMessage","slice","addClickListeners","addContextPassthroughListeners","client"],"mappings":"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","sourcesContent":["/* eslint-disable no-underscore-dangle */\nimport { analytics, Analytics } from './analytics';\nimport { dispatch, Dispatch } from './dispatch';\nimport { iap, IAP } from './iap';\nimport { identity, Identity } from './identity';\nimport { playerState, PlayerState } from './playerState';\nimport { remix, Remix } from './remix';\nimport { ui, UI } from './ui';\nimport { web3Provider, Web3Provider } from './web3';\n\nimport { client } from './@decorators/client';\nimport { equalsIgnoreOrder } from '../utils/equalsIgnoreOrder';\n\n/**\n * Configuration data for the Koji app.\n */\nexport interface KojiConfig {\n  /** Instructions for setting up the services in a development/editor environment. */\n  develop?: {[index: string]: any};\n\n  /** Instructions for deploying the services to production. */\n  deploy?: {[index: string]: any};\n\n  /** Metadata about the project and creator. */\n  metadata?: KojiMetadata;\n\n  /** Default values for the configuration data. */\n  remixData?: {[index: string]: any};\n\n  /** Placeholder values for new customized versions. */\n  '@@initialTransform'?: {[index: string]: any};\n}\n\n/**\n * Key-value pairs of services and endpoints.\n */\nexport type Services = { [key: string]: string | undefined };\n\n/**\n * Configuration options for the Koji app.\n */\nexport interface KojiConfigOptions {\n  /** Unique identifier for the Koji app. */\n  projectId?: string;\n\n  /** Defines services for the Koji app. */\n  services: Services;\n\n  /** Overrides for the platform-provided metadata. */\n  metadata?: KojiMetadata;\n}\n\n/**\n * Metadata about the project and creator.\n * This information is provided by the platform but can be overridden when the Koji app is initialized.\n */\nexport interface KojiMetadata {\n  /** Unique identifier for the Koji app. */\n  projectId: string;\n\n  /** Creator's username. */\n  creatorUsername: string;\n\n  /** URL reference to the creator's current profile picture. */\n  creatorProfilePicture: string;\n}\n\n/**\n * Provides frontend methods for your Koji app.\n */\nexport class Koji {\n  /** Indicates that the Koji.ready() call has been made. */\n  public isReady: boolean;\n\n  /** Indicates that the Koji.config() call has been made. */\n  public configInitialized: boolean = false;\n\n  /** The configured service endpoints. */\n  public services: Services = {};\n\n  /** The project's id. */\n  public projectId?: string;\n\n  /** Metadata about the project and creator. */\n  public metadata?: KojiMetadata;\n\n  public analytics: Analytics = analytics;\n  public dispatch: Dispatch = dispatch;\n  public iap: IAP = iap;\n  public identity: Identity = identity;\n  public playerState: PlayerState = playerState;\n  public remix: Remix = remix;\n  public ui: UI = ui;\n  public web3Provider: Web3Provider = web3Provider;\n\n  constructor() {\n    this.isReady = false;\n  }\n\n  /**\n   * Initializes this package for use with configuration data from the `koji.json` file. This method sets up the services, customization values, development environment, and deployment instructions for your Koji app. It also performs some basic structural checks.\n   *\n   * NOTE: The app must initialize the package before any data is rendered. Initialization must be done exactly once.\n   *\n   * @param kojiConfig Configuration data for the Koji app.\n   *\n   * @example\n   * ```\n   * Koji.config(require('koji.json'));\n   * ```\n   */\n  public config(\n    kojiConfig: KojiConfig = {},\n    kojiConfigOptions: KojiConfigOptions = {\n      services: {},\n    },\n  ): void {\n    if (this.configInitialized) {\n      throw new Error('You are trying to run `Koji.config()` more than one time. This could cause unexpected behavior in your project.');\n    }\n\n    // Pull the `koji-feed-key` off the URL fragment, if it exists, and save it\n    // to the window so we can grab it if the URL changes due to navigation\n    // events.\n    if (!window.KOJI_FEED_KEY) {\n      const feedKey = window.location.hash.replace('#koji-feed-key=', '');\n      if (feedKey) {\n        window.KOJI_FEED_KEY = feedKey;\n      }\n    }\n\n    // Deconstruct the user's config\n    const {\n      develop = {},\n      deploy = {},\n      remixData = {},\n    } = kojiConfig;\n\n    // Check for the project id\n    this.resolveMetadata(\n      kojiConfigOptions.projectId,\n      kojiConfigOptions.metadata,\n    );\n\n    // Set up and sanity check services\n    this.resolveServices(develop, deploy, kojiConfigOptions.services);\n\n    // Initialize customization data\n    this.remix.init(remixData);\n  }\n\n  private resolveMetadata(\n    explicitProjectId?: string,\n    metadata?: KojiMetadata,\n  ) {\n    let projectId = explicitProjectId || process.env.KOJI_PROJECT_ID;\n    let creatorUsername = process.env.KOJI_CREATOR_USERNAME;\n    let creatorProfilePicture = process.env.KOJI_CREATOR_PROFILE_PICTURE;\n\n    if (metadata) {\n      creatorUsername = metadata.creatorUsername;\n      creatorProfilePicture = metadata.creatorProfilePicture;\n    }\n\n    // Even if the value is overwritten by an override, it should still\n    // be defined at this point.\n    if (!projectId) {\n      throw new Error('Unable to find project id.');\n    }\n\n    // Handle overrides\n    if (window.KOJI_OVERRIDES) {\n      const {\n        overrides = {},\n      } = window.KOJI_OVERRIDES;\n\n      if (overrides && overrides.metadata) {\n        projectId = overrides.metadata.projectId;\n        creatorUsername = overrides.metadata.creatorUsername;\n        creatorProfilePicture = overrides.metadata.creatorProfilePicture;\n      }\n    }\n\n    // Set local projectId\n    this.projectId = projectId;\n\n    // Set the metadata\n    this.metadata = {\n      projectId: projectId || '',\n      creatorUsername: creatorUsername || '',\n      creatorProfilePicture: creatorProfilePicture || '',\n    };\n\n    // Init dispatch\n    this.dispatch?.setProjectId(projectId as string);\n  }\n\n  private resolveServices(develop: Object, deploy: Object, services: Services) {\n    const developServices = Object.keys(develop);\n    const deployServices = Object.keys(deploy);\n\n    // Require at least one deploy service to be defined\n    if (deployServices.length === 0) {\n      throw new Error('Your configuration does not include any services for deployment');\n    }\n\n    // Require at least one develop service to be defined\n    if (developServices.length === 0) {\n      throw new Error('Your configuration does not include any services for development');\n    }\n\n    // Require the develop and deploy services to match\n    if (!equalsIgnoreOrder(deployServices, developServices)) {\n      throw new Error('Your develop and deploy services do not match');\n    }\n\n    // Create the base service map and look for env vars we know to exist\n    const baseServiceMap: Services = {};\n    deployServices.forEach((serviceName) => {\n      baseServiceMap[serviceName] = process.env[`KOJI_SERVICE_URL_${serviceName}`];\n    });\n\n    // If the user has explicitly passed in values, use those instead\n    Object.keys(services).forEach((serviceName) => {\n      if (services[serviceName]) {\n        baseServiceMap[serviceName] = services[serviceName];\n      }\n    });\n\n    // Require a value for each service\n    Object.keys(baseServiceMap).forEach((serviceName) => {\n      if (!baseServiceMap[serviceName]) {\n        throw new Error(`Unable to find a value for the ${serviceName} service. If your value is not available at \\`process.env.KOJI_SERVICE_URL_${serviceName}\\`, you may need to pass it explicitly using the second, kojiConfigOptions parameter when calling Koji.config`);\n      }\n    });\n\n    // Handle overrides\n    if (window.KOJI_OVERRIDES) {\n      const { overrides = {} } = window.KOJI_OVERRIDES;\n      if (overrides && overrides.serviceMap) {\n        this.services = {\n          ...baseServiceMap,\n          ...overrides.serviceMap,\n        };\n      }\n    } else {\n      this.services = { ...baseServiceMap };\n    }\n  }\n\n  private addClickListeners() {\n    // Add a listener to pass click events up to the parent window,\n    // as there is no way for the platform to know these clicks are\n    // happening due to iframe constraints\n    window.addEventListener(\n      'click',\n      (e) => {\n        try {\n          const { clientX, clientY } = e;\n          window.parent.postMessage(\n            {\n              _type: 'Koji.ClickEvent',\n              _feedKey: window.KOJI_FEED_KEY,\n              x: clientX,\n              y: clientY,\n            },\n            '*',\n          );\n        } catch (err) {\n          //\n        }\n      },\n      {\n        capture: true,\n        passive: true,\n      },\n    );\n  }\n\n  private addContextPassthroughListeners() {\n    window.addEventListener('message', ({ data, origin }) => {\n      // Handle passthrough of messages from Koji apps inside this app\n      if (data._type === 'Koji.ContextPassthrough.Up') {\n        try {\n          // Mutate the source map to add the context\n          if (window.parent) {\n            window.parent.postMessage(\n              {\n                ...data,\n                _path: [origin, ...(data._path || [])],\n              },\n              '*',\n            );\n          }\n        } catch (err) {\n          //\n        }\n      }\n\n      if (data._type === 'Koji.ContextPassthrough.Down') {\n        try {\n          const destinationOrigin = data._path[0];\n          const frame: HTMLIFrameElement | undefined = Array\n            .from(document.getElementsByTagName('iframe'))\n            .find(({ src }) => src.startsWith(destinationOrigin));\n\n          if (frame && frame.contentWindow) {\n            if (data._path.length === 0) {\n              frame.contentWindow.postMessage(\n                {\n                  ...data.originalMessage,\n                },\n                '*',\n              );\n            } else {\n              frame.contentWindow.postMessage(\n                {\n                  ...data,\n                  _path: data._path.slice(1),\n                },\n                '*',\n              );\n            }\n          }\n        } catch (err) {\n          // console.log(err);\n        }\n      }\n    });\n  }\n\n  /**\n   * Indicates that the Koji app is ready to start receiving events.\n   *\n   * NOTE: You must call this function after initializing the package and subscribing to customization changes but before advancing to the preview with `Koji.remix.finish`.\n   *\n   * @example\n   * ```javascript\n   * Koji.ready();\n   * ```\n   */\n  @client\n  public ready() {\n    if (this.isReady) {\n      throw new Error('You are calling `Koji.ready()` more than one time. This could cause unexpected behavior in your project.');\n    }\n\n    this.isReady = true;\n\n    // Add click listeners to bubble up click events to the platform\n    this.addClickListeners();\n\n    // Add context passthrough listeners to allow messages to bubble up/down between layered Kojis\n    this.addContextPassthroughListeners();\n\n    // Send the ready message, letting the platform know it's okay\n    // to release any queued messages\n    window.parent.postMessage(\n      {\n        _type: 'KojiPreview.Ready',\n        _feedKey: window.KOJI_FEED_KEY,\n      },\n      '*',\n    );\n  }\n}\n\nexport default new Koji();\n"],"file":"index.js"}