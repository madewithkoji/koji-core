{"version":3,"sources":["../../src/frontend/index.ts"],"names":["Koji","analytics","dispatch","iap","identity","playerState","remix","ui","isReady","kojiConfig","kojiConfigOptions","services","configInitialized","Error","develop","deploy","remixData","setProjectId","projectId","setUpServices","init","explicitProjectId","process","env","KOJI_PROJECT_ID","window","KOJI_OVERRIDES","overrides","metadata","developServices","Object","keys","deployServices","length","baseServiceMap","forEach","serviceName","serviceMap","addEventListener","e","clientX","clientY","parent","postMessage","_type","_feedKey","location","hash","replace","x","y","err","capture","passive","data","origin","_path","destinationOrigin","frame","Array","from","document","getElementsByTagName","find","src","startsWith","contentWindow","originalMessage","slice","console","log","addClickListeners","addContextPassthroughListeners","client"],"mappings":"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","sourcesContent":["/* eslint-disable no-underscore-dangle */\nimport { analytics, Analytics } from './analytics';\nimport { dispatch, Dispatch } from './dispatch';\nimport { iap, IAP } from './iap';\nimport { identity, Identity } from './identity';\nimport { playerState, PlayerState } from './playerState';\nimport { remix, Remix } from './remix';\nimport { ui, UI } from './ui';\nimport { client } from './@decorators/client';\nimport { equalsIgnoreOrder } from '../utils/equalsIgnoreOrder';\n\n/**\n * Defines the configuration data for the Koji.\n */\nexport interface KojiConfig {\n  /** Instructions for setting up the services in a development/editor environment. */\n  develop?: any;\n  /** Instructions for deploying the services to production. */\n  deploy?: any;\n  /** Default values for the customizable remix data. */\n  remixData?: any;\n  /** Placeholder values for new remixes. */\n  '@@initialTransform'?: any;\n}\n\n/**\n * Key-value pairs of services and endpoints.\n */\nexport type Services = { [key: string]: string | undefined };\n\n/**\n * Configuration options for the Koji.\n */\nexport interface KojiConfigOptions {\n  /** Unique identifier for the Koji. */\n  projectId?: string;\n  /** Defines services for the Koji. */\n  services: Services;\n}\n/**\n * Provides frontend methods for your Koji.\n */\nexport class Koji {\n  /** Indicates that the Koji.ready() call has been made. */\n  public isReady: boolean;\n  /** Indicates that the Koji.config() call has been made. */\n  public configInitialized: boolean = false;\n  /** The configured service endpoints. */\n  public services: Services = {};\n  /** The project's id. */\n  public projectId?: string;\n\n  public analytics: Analytics = analytics;\n  public dispatch: Dispatch = dispatch;\n  public iap: IAP = iap;\n  public identity: Identity = identity;\n  public playerState: PlayerState = playerState;\n  public remix: Remix = remix;\n  public ui: UI = ui;\n\n  constructor() {\n    this.isReady = false;\n  }\n\n  /**\n   * Initializes this package for use with configuration data from the `koji.json` file. This method sets up the services, remix values, development environment, and deployment instructions for your Koji. It also performs some basic structural checks.\n   *\n   * @param kojiConfig Configuration data for the Koji.\n   *\n   * @example\n   * ```\n   * Koji.config(require('koji.json'));\n   * ```\n   */\n  public config(kojiConfig: KojiConfig = {}, kojiConfigOptions: KojiConfigOptions = { services: {} }): void {\n    if (this.configInitialized) {\n      throw new Error('You are trying to run `Koji.config()` more than one time. This could cause unexpected behavior in your project.');\n    }\n\n    // Deconstruct the user's config\n    const { develop = {}, deploy = {}, remixData = {} } = kojiConfig;\n\n    // Check for the project id\n    this.setProjectId(kojiConfigOptions.projectId);\n\n    // Set up and sanity check services\n    this.setUpServices(develop, deploy, kojiConfigOptions.services);\n\n    // Initialize remix data\n    this.remix.init(remixData);\n  }\n\n  private setProjectId(explicitProjectId?: string) {\n    let projectId = explicitProjectId || process.env.KOJI_PROJECT_ID;\n\n    // Even if the value is overwritten by an override, it should still\n    // be defined at this point.\n    if (!projectId) throw new Error('Unable to find project id.');\n\n    // Handle overrides\n    if (window.KOJI_OVERRIDES) {\n      const { overrides = {} } = window.KOJI_OVERRIDES;\n      if (overrides && overrides.metadata && overrides.metadata.projectId) {\n        projectId = overrides.metadata.projectId;\n      }\n    }\n\n    // Set local projectId\n    this.projectId = projectId;\n\n    // Init dispatch\n    this.dispatch?.setProjectId(projectId as string);\n  }\n\n  private setUpServices(develop: Object, deploy: Object, services: Services) {\n    const developServices = Object.keys(develop);\n    const deployServices = Object.keys(deploy);\n\n    // Require at least one deploy service to be defined\n    if (deployServices.length === 0) throw new Error('Your configuration does not include any services for deployment');\n\n    // Require at least one develop service to be defined\n    if (developServices.length === 0) throw new Error('Your configuration does not include any services for development');\n\n    // Require the develop and deploy services to match\n    if (!equalsIgnoreOrder(deployServices, developServices)) throw new Error('Your develop and deploy services do not match');\n\n    // Create the base service map and look for env vars we know to exist\n    const baseServiceMap: Services = {};\n    deployServices.forEach((serviceName) => {\n      baseServiceMap[serviceName] = process.env[`KOJI_SERVICE_URL_${serviceName}`];\n    });\n\n    // If the user has explicitly passed in values, use those instead\n    Object.keys(services).forEach((serviceName) => {\n      if (services[serviceName]) {\n        baseServiceMap[serviceName] = services[serviceName];\n      }\n    });\n\n    // Require a value for each service\n    Object.keys(baseServiceMap).forEach((serviceName) => {\n      if (!baseServiceMap[serviceName]) throw new Error(`Unable to find a value for the ${serviceName} service. If your value is not available at \\`process.env.KOJI_SERVICE_URL_${serviceName}\\`, you may need to pass it explicitly using the second, kojiConfigOptions parameter when calling Koji.config`);\n    });\n\n    // Handle overrides\n    if (window.KOJI_OVERRIDES) {\n      const { overrides = {} } = window.KOJI_OVERRIDES;\n      if (overrides && overrides.serviceMap) {\n        this.services = {\n          ...baseServiceMap,\n          ...overrides.serviceMap,\n        };\n      }\n    } else {\n      this.services = { ...baseServiceMap };\n    }\n  }\n\n  private addClickListeners() {\n    // Add a listener to pass click events up to the parent window,\n    // as there is no way for the platform to know these clicks are\n    // happening due to iframe constraints\n    window.addEventListener(\n      'click',\n      (e) => {\n        try {\n          const { clientX, clientY } = e;\n          window.parent.postMessage(\n            {\n              _type: 'Koji.ClickEvent',\n              _feedKey: window.location.hash.replace('#koji-feed-key=', ''),\n              x: clientX,\n              y: clientY,\n            },\n            '*',\n          );\n        } catch (err) {\n          //\n        }\n      },\n      { capture: true, passive: true },\n    );\n  }\n\n  private addContextPassthroughListeners() {\n    window.addEventListener('message', ({ data, origin }) => {\n      // Handle passthrough of messages from any Kojis inside this Koji\n      if (data._type === 'Koji.ContextPassthrough.Up') {\n        try {\n          // Mutate the source map to add the context\n          if (window.parent) {\n            window.parent.postMessage(\n              {\n                ...data,\n                _path: [origin, ...(data._path || [])],\n              },\n              '*',\n            );\n          }\n        } catch (err) {\n          //\n        }\n      }\n\n      if (data._type === 'Koji.ContextPassthrough.Down') {\n        try {\n          const destinationOrigin = data._path[0];\n          const frame: HTMLIFrameElement | undefined = Array.from(document.getElementsByTagName('iframe')).find(({ src }) => src.startsWith(destinationOrigin));\n\n          if (frame && frame.contentWindow) {\n            if (data._path.length === 0) {\n              frame.contentWindow.postMessage(\n                {\n                  ...data.originalMessage,\n                },\n                '*',\n              );\n            } else {\n              frame.contentWindow.postMessage(\n                {\n                  ...data,\n                  _path: data._path.slice(1),\n                },\n                '*',\n              );\n            }\n          }\n        } catch (err) {\n          console.log(err);\n        }\n      }\n    });\n  }\n\n  /**\n   * Indicates that the Koji is ready to start receiving events.\n   *\n   * @example\n   * ```javascript\n   * Koji.ready\n   * ```\n   */\n  @client\n  public ready() {\n    if (this.isReady) {\n      throw new Error('You are calling `Koji.ready()` more than one time. This could cause unexpected behavior in your project.');\n    }\n\n    this.isReady = true;\n\n    // Add click listeners to bubble up click events to the platform\n    this.addClickListeners();\n\n    // Add context passthrough listeners to allow messages to bubble up/down between layered Kojis\n    this.addContextPassthroughListeners();\n\n    // Send the ready message, letting the platform know it's okay\n    // to release any queued messages\n    window.parent.postMessage(\n      {\n        _type: 'KojiPreview.Ready',\n        _feedKey: window.location.hash.replace('#koji-feed-key=', ''),\n      },\n      '*',\n    );\n  }\n}\n\nexport default new Koji();\n"],"file":"index.js"}