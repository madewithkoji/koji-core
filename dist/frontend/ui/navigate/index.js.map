{"version":3,"sources":["../../../../src/frontend/ui/navigate/index.ts"],"names":["Navigate","url","sendMessage","kojiEventName","data","presentationType","appId","options","id","KojiBridge","client","navigate"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;;;;;;;AAEA;AACA;AACA;IACaA,Q;;;;;;;;;;;;;AACX;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;uBAEYC,G,EAAmB;AAC3B,WAAKC,WAAL,CAAiB;AACfC,QAAAA,aAAa,EAAE,eADA;AAEfC,QAAAA,IAAI,EAAE;AACJH,UAAAA,GAAG,EAAHA;AADI;AAFS,OAAjB;AAMD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;mCAEwBA,G,EAAmB;AACvC,WAAKC,WAAL,CAAiB;AACfC,QAAAA,aAAa,EAAE,eADA;AAEfC,QAAAA,IAAI,EAAE;AACJC,UAAAA,gBAAgB,EAAE,OADd;AAEJJ,UAAAA,GAAG,EAAHA;AAFI;AAFS,OAAjB;AAOD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;gCAEqBK,K,EAAsB;AACvC,WAAKJ,WAAL,CAAiB;AACfC,QAAAA,aAAa,EAAE,kBADA;AAEfC,QAAAA,IAAI,EAAE;AACJG,UAAAA,OAAO,EAAE;AACPC,YAAAA,EAAE,EAAEF;AADG;AADL;AAFS,OAAjB;AAQD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;2BAEsB;AAClB,WAAKJ,WAAL,CAAiB;AACfC,QAAAA,aAAa,EAAE,WADA;AAEfC,QAAAA,IAAI,EAAE;AAFS,OAAjB;AAID;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;8BAEyB;AACrB,WAAKF,WAAL,CAAiB;AACfC,QAAAA,aAAa,EAAE,cADA;AAEfC,QAAAA,IAAI,EAAE;AAFS,OAAjB;AAID;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;oCAEyBH,G,EAAoB;AACzC,WAAKC,WAAL,CAAiB;AACfC,QAAAA,aAAa,EAAE,YADA;AAEfC,QAAAA,IAAI,EAAE;AACJH,UAAAA,GAAG,EAAHA;AADI;AAFS,OAAjB;AAMD;;;EA/I2BQ,sB,wEAa3BC,c,+JAuBAA,c,wKAuBAA,c,8JAyBAA,c,0JAkBAA,c,qKAiCAA,c;;AAWI,IAAMC,QAAQ,GAAG,IAAIX,QAAJ,EAAjB","sourcesContent":["import { KojiBridge } from '../../kojiBridge';\nimport { client } from '../../@decorators/client';\n\n/**\n * Provides methods for controlling navigation within your Koji app.\n */\nexport class Navigate extends KojiBridge {\n  /**\n   * Replaces the currently loaded Koji with the content at the specified URL.\n   *\n   * @param url URL of the content to load.\n   *\n   * @example\n   * ```html\n   * <button type=\"button\" onClick={() => Koji.ui.navigate.to(url)}>\n   *  My favorite Koji\n   * </button>\n   * ```\n   */\n  @client\n  public to(url: string): void {\n    this.sendMessage({\n      kojiEventName: 'Koji.Navigate',\n      data: {\n        url,\n      },\n    });\n  }\n\n  /**\n   * Opens the content at the specified URL in a modal window that animates from the bottom of the screen.\n   * If the parent Koji is already displayed in a modal window, the content will open in the same window, replacing the current view.\n   *\n   * @param url URL of the content to load.\n   *\n   * @example\n   * ```html\n   * <button type=\"button\" onClick={() => Koji.ui.navigate.presentInModal(url)}>\n   *   My favorite Koji\n   * </button>\n   * ```\n   */\n  @client\n  public presentInModal(url: string): void {\n    this.sendMessage({\n      kojiEventName: 'Koji.Navigate',\n      data: {\n        presentationType: 'modal',\n        url,\n      },\n    });\n  }\n\n  /**\n   * Starts a new customization.\n   *\n   * @param appId ID of the Koji project to customize. Defaults to the current Koji app if an ID is not specified.\n   *\n   * @example\n   * ```html\n   * <button type=\"button\" onClick={() => Koji.ui.navigate.createRemix()}>\n   *   Create my own customization\n   * </button>\n   * ```\n   */\n  @client\n  public createRemix(appId?: string): void {\n    this.sendMessage({\n      kojiEventName: 'Koji.CreateRemix',\n      data: {\n        options: {\n          id: appId,\n        },\n      },\n    });\n  }\n\n  /**\n   * Opens the Koji app in editing mode.\n   *\n   * NOTE: Check that the current user is an admin before calling this method.\n   * Otherwise, the user will not be authorized to edit the Koji app.\n   *\n   * @example\n   * ```html\n   * <button type=\"button\" onClick={() => Koji.ui.navigate.edit()}>\n   *   Edit this Koji\n   * </button>\n   * ```\n   */\n  @client\n  public edit(): void {\n    this.sendMessage({\n      kojiEventName: 'Koji.Edit',\n      data: {},\n    });\n  }\n\n  /**\n   * Closes a Koji app that is in a modal window.\n   *\n   * @example\n   * ```html\n   * <button type=\"button\" onClick={() => Koji.ui.navigate.dismiss()}>\n   *   Close window\n   * </button>\n   * ```\n   */\n  @client\n  public dismiss(): void {\n    this.sendMessage({\n      kojiEventName: 'Koji.Dismiss',\n      data: {},\n    });\n  }\n\n  /**\n   * Opens the sharing dialog box. By default, the dialog box shares the URL of the current Koji.\n   * Specify a full or a relative URL to open a dialog box for sharing a different URL or for a deep link into your Koji app.\n   *\n   * NOTE: If you use this method to share a deep link in your Koji app, a `koji.to` short URL is automatically created for it.\n   *\n   * @param url URL to use instead of the current Koji.\n   *\n   * @example\n   * ```html\n   * <button type=\"button\" onClick={() => Koji.ui.navigate.openShareDialog()}>\n   *   Share this Koji\n   * </button>\n   *\n   * // full URL\n   * <button type=\"button\" onClick={() => Koji.ui.navigate.openShareDialog('https://withkoji.com/@myname')}>\n   *   Share your profile\n   * </button>\n   *\n   * // relative URL\n   * <button type=\"button\" onClick={() => Koji.ui.navigate.openShareDialog('?key=value')}>\n   *   Share this info\n   * </button>\n   * ```\n   */\n  @client\n  public openShareDialog(url?: string): void {\n    this.sendMessage({\n      kojiEventName: 'Koji.Share',\n      data: {\n        url,\n      },\n    });\n  }\n}\n\nexport const navigate = new Navigate();\n"],"file":"index.js"}