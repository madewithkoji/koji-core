{"version":3,"sources":["../../../src/frontend/iap/index.ts"],"names":["IAP","sendMessageAndAwaitResponse","kojiEventName","data","userToken","sku","purchaseOptions","success","receiptId","iapToken","KojiBridge","client","iap"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;;;;;;;AAoBA;AACA;AACA;IACaA,G;;;;;;;;;;;;;AACX;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;uBAGgC,KAAKC,2BAAL,CAC1B;AACEC,kBAAAA,aAAa,EAAE,qBADjB;AAEEC,kBAAAA,IAAI,EAAE;AAFR,iBAD0B,EAK1B,sBAL0B,C;;;;AAApBC,gBAAAA,S,yBAAAA,S;iDAQDA,S;;;;;;;;;;;;;;;;AAGT;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;2HAE6BC,G;;;;;;;;;;;;AAAaC,gBAAAA,e,8DAAmC,E;;uBACzB,KAAKL,2BAAL,CAC9C;AACEC,kBAAAA,aAAa,EAAE,2BADjB;AAEEC,kBAAAA,IAAI,EAAE;AACJE,oBAAAA,GAAG,EAAHA,GADI;AAEJC,oBAAAA,eAAe,EAAfA;AAFI;AAFR,iBAD8C,EAQ9C,0BAR8C,C;;;;AAAxCC,gBAAAA,O,0BAAAA,O;AAASH,gBAAAA,S,0BAAAA,S;AAAWI,gBAAAA,S,0BAAAA,S;kDAWrB;AACLD,kBAAAA,OAAO,EAAPA,OADK;AAELE,kBAAAA,QAAQ,EAAEL,SAFL;AAGLI,kBAAAA,SAAS,EAATA;AAHK,iB;;;;;;;;;;;;;;;;;;EA7CcE,sB,8EAStBC,c,oKAuBAA,c;;AAqBI,IAAMC,GAAG,GAAG,IAAIZ,GAAJ,EAAZ","sourcesContent":["import { KojiBridge } from '../kojiBridge';\nimport { client } from '../@decorators/client';\nimport { IAPToken } from '../../types';\n\n/** Custom information to add to a [[IapReceipt | transaction receipt]] for a given in-app purchase. */\nexport interface PurchaseOptions {\n  /** Amount of the purchase. */\n  amount?: number;\n  /** Custom message associated with the purchase. This value is stored as a custom attribute on the [[IapReceipt | transaction receipt]]. */\n  customMessage?: string;\n}\n\n/** Results of an in-app purchase transaction. */\nexport interface Purchase {\n  /** Indicates whether the purchase was successful. */\n  success: boolean;\n  /** Temporary token for the current userâ€™s session. See [[getToken]]. */\n  iapToken: IAPToken;\n  /** Unique identifier for the receipt, if the purchase was successful, or `undefined`, if not. */\n  receiptId?: string;\n}\n/**\n * Manages in-app purchase transactions on the frontend of your Koji.\n */\nexport class IAP extends KojiBridge {\n  /**\n   * Generates an IAP Token (used to resolve receipts in the backend)\n   *\n   * @example\n   * ``` javascript\n   * const IAPToken = await Koji.iap.getToken();\n   * ```\n   */\n  @client\n  public async getToken(): Promise<IAPToken> {\n    const { userToken } = await this.sendMessageAndAwaitResponse(\n      {\n        kojiEventName: '@@koji/iap/getToken',\n        data: {},\n      },\n      'KojiIap.TokenCreated',\n    );\n\n    return userToken;\n  }\n\n  /**\n   * Prompts the user to purchase a product from the Koji. Products are defined in the entitlements file and registered or updated when the Koji is published.\n   *\n   * @param  sku             Identifier for the product to purchase.\n   *\n   * @example\n   * ``` javascript\n   * Koji.iap.startPurchase(sku, purchaseOptions);\n   * ```\n   */\n  @client\n  public async startPurchase(sku: string, purchaseOptions: PurchaseOptions = {}): Promise<Purchase> {\n    const { success, userToken, receiptId } = await this.sendMessageAndAwaitResponse(\n      {\n        kojiEventName: '@@koji/iap/promptPurchase',\n        data: {\n          sku,\n          purchaseOptions,\n        },\n      },\n      'KojiIap.PurchaseFinished',\n    );\n\n    return {\n      success,\n      iapToken: userToken,\n      receiptId,\n    };\n  }\n}\n\nexport const iap = new IAP();\n"],"file":"index.js"}