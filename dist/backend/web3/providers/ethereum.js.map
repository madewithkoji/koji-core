{"version":3,"sources":["../../../../src/backend/web3/providers/ethereum.ts"],"names":["EthereumRoutes","EthereumProvider","config","rootPath","rootHeaders","projectId","projectToken","contractId","accountAddress","axios","post","GET_BALANCE","headers","data","balance","Base","server"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;AAEA;AACA;AACA;IACKA,c;AAIL;AACA;AACA;;WANKA,c;AAAAA,EAAAA,c;GAAAA,c,KAAAA,c;;IAOQC,gB;;;;;AAIX;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,4BAAmBC,MAAnB,EAAsD;AAAA;;AAAA;AACpD,8BAAMA,MAAN;AADoD;AAAA;AAGpD,UAAKC,QAAL,GAAgB,6BAAhB;AAEA,UAAKC,WAAL,GAAmB;AACjB,2BAAqB,MAAKC,SADT;AAEjB,8BAAwB,MAAKC,YAFZ;AAGjB,sBAAgB;AAHC,KAAnB;AALoD;AAUrD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;6HAGIC,U,EACAC,c;;;;;;;;;uBAGyBC,kBAAMC,IAAN,WAClB,KAAKP,QADa,SACFH,cAAc,CAACW,WADb,GAErB;AACEJ,kBAAAA,UAAU,EAAVA,UADF;AAEEC,kBAAAA,cAAc,EAAdA;AAFF,iBAFqB,EAMrB;AACEI,kBAAAA,OAAO,EAAE,KAAKR;AADhB,iBANqB,C;;;;AAAfS,gBAAAA,I,qBAAAA,I;iDAUDA,IAAI,CAACC,O;;;;;iDAEL,C;;;;;;;;;;;;;;;;;;EA1DyBC,U,8FAwCnCC,c","sourcesContent":["import axios from 'axios';\nimport { server } from '../../@decorators/server';\nimport { Base, BackendConfigurationInput } from '../../base';\n\n/**\n * API routes for utilities.\n */\nenum EthereumRoutes {\n  GET_BALANCE = '/v1/apps/hooks/web3/erc721/balanceOf',\n}\n\n/**\n * Provides utility methods for improving the performance and functionality of your Koji app.\n */\nexport class EthereumProvider extends Base {\n  private rootPath: string;\n  private rootHeaders: Object;\n\n  /**\n   * Instantiates the Ethereum class.\n   *\n   * @param   config\n   *\n   * @example\n   * ```javascript\n   * const ethereum = new KojiBackend.web3.ethereum({ res });\n   * ```\n   */\n  public constructor(config: BackendConfigurationInput) {\n    super(config);\n\n    this.rootPath = 'https://rest.api.gokoji.com';\n\n    this.rootHeaders = {\n      'X-Koji-Project-Id': this.projectId,\n      'X-Koji-Project-Token': this.projectToken,\n      'Content-Type': 'application/json',\n    };\n  }\n\n  /**\n   * Get a balance for an account ID\n   *\n   * @param   contractId      The ID of the smart contract\n   * @param   accountAddress  The address of the account to query\n   *\n   * @example\n   * ```javascript\n   * const balance = await ethereum.getERC721Balance(\n   *    '0xa3aee8bce55beea1951ef834b99f3ac60d1abeeb',\n   *    '0x1702a1e7b9823e8e73efc19be25eea2712b9de22',\n   * );\n   * ```\n   */\n  @server\n  public async getERC721Balance(\n    contractId: string,\n    accountAddress: string,\n  ): Promise<number> {\n    try {\n      const { data } = await axios.post(\n        `${this.rootPath}${EthereumRoutes.GET_BALANCE}`,\n        {\n          contractId,\n          accountAddress,\n        },\n        {\n          headers: this.rootHeaders,\n        },\n      );\n      return data.balance;\n    } catch (err) {\n      return 0;\n    }\n  }\n}\n"],"file":"ethereum.js"}