{"version":3,"sources":["../../../src/backend/@decorators/server.ts"],"names":["server","target","propertyKey","descriptor","originalFunction","value","serverDecorator","window","Error","args","apply","err","console","error","toString"],"mappings":";;;;;;;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,MAAT,CAAgBC,MAAhB,EAAgCC,WAAhC,EAAqDC,UAArD,EAA0F;AAC/F,MAAMC,gBAAgB,GAAGD,UAAU,CAACE,KAApC;;AAEAF,EAAAA,UAAU,CAACE,KAAX,GAAmB,SAASC,eAAT,GAAyC;AAC1D,QAAI;AACF,UAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC,MAAM,IAAIC,KAAJ,CAAU,0EAAV,CAAN;;AADjC,wCADyCC,IACzC;AADyCA,QAAAA,IACzC;AAAA;;AAGF,aAAOL,gBAAgB,CAACM,KAAjB,CAAuB,IAAvB,EAA6BD,IAA7B,CAAP;AACD,KAJD,CAIE,OAAOE,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,KAAR,gBAAsBF,GAAG,CAACG,QAAJ,EAAtB;AACD;;AAED,WAAO,KAAP;AACD,GAVD;;AAYA,SAAOX,UAAP;AACD","sourcesContent":["/* eslint-disable no-param-reassign */\n/**\n * Verifies that server-side methods are used only in backend services of the Koji.\n * @param   target      Class to which the method belongs.\n * @param   propertyKey Method name.\n * @param   descriptor  Method's behavior (which can be mutated inside this function).\n * @return              Method's behavior or an error, if the method is being invoked in a frontend environment.\n */\nexport function server(target: Object, propertyKey: string, descriptor: PropertyDescriptor): any {\n  const originalFunction = descriptor.value;\n\n  descriptor.value = function serverDecorator(...args: any[]) {\n    try {\n      if (typeof window !== 'undefined') throw new Error('It looks like you are trying to call a server-side method on the client.');\n\n      return originalFunction.apply(this, args);\n    } catch (err) {\n      console.error(`Err: ${err.toString()}`);\n    }\n\n    return false;\n  };\n\n  return descriptor;\n}\n"],"file":"server.js"}