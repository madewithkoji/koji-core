{"version":3,"sources":["../../../src/backend/base/index.spec.ts"],"names":["describe","it","expect","res","toThrow","locals","KOJI_PROJECT_ID","KOJI_PROJECT_TOKEN","projectId","projectToken","toBe"],"mappings":";;AAAA;;AAEAA,QAAQ,CAAC,cAAD,EAAiB,YAAM;AAC7BC,EAAAA,EAAE,CAAC,yFAAD,EAA4F,YAAM;AAClGC,IAAAA,MAAM,CAAC,YAAM;AACX;AACA,iCAAe;AAAEC,QAAAA,GAAG,EAAE;AAAP,OAAf;AACD,KAHK,CAAN,CAGGC,OAHH,CAIE,mHAJF;AAMD,GAPC,CAAF;AASAH,EAAAA,EAAE,CAAC,oFAAD,EAAuF,YAAM;AAAA,0BACzD,2BAAe;AACjD;AACAE,MAAAA,GAAG,EAAE;AACHE,QAAAA,MAAM,EAAE;AACNC,UAAAA,eAAe,EAAE,QADX;AAENC,UAAAA,kBAAkB,EAAE;AAFd;AADL;AAF4C,KAAf,CADyD;AAAA,QACrFC,SADqF,mBACrFA,SADqF;AAAA,QAC1EC,YAD0E,mBAC1EA,YAD0E;;AAW7FP,IAAAA,MAAM,CAACM,SAAD,CAAN,CAAkBE,IAAlB,CAAuB,QAAvB;AACAR,IAAAA,MAAM,CAACO,YAAD,CAAN,CAAqBC,IAArB,CAA0B,WAA1B;AACD,GAbC,CAAF;AAeAT,EAAAA,EAAE,CAAC,8FAAD,EAAiG,YAAM;AACvGC,IAAAA,MAAM,CAAC,YAAM;AACX,iCAAe,EAAf;AACD,KAFK,CAAN,CAEGE,OAFH,CAEW,gCAFX;AAGD,GAJC,CAAF;AAMAH,EAAAA,EAAE,CAAC,oEAAD,EAAuE,YAAM;AAAA,2BACzC,2BAAe;AACjDO,MAAAA,SAAS,EAAE,QADsC;AAEjDC,MAAAA,YAAY,EAAE;AAFmC,KAAf,CADyC;AAAA,QACrED,SADqE,oBACrEA,SADqE;AAAA,QAC1DC,YAD0D,oBAC1DA,YAD0D;;AAM7EP,IAAAA,MAAM,CAACM,SAAD,CAAN,CAAkBE,IAAlB,CAAuB,QAAvB;AACAR,IAAAA,MAAM,CAACO,YAAD,CAAN,CAAqBC,IAArB,CAA0B,WAA1B;AACD,GARC,CAAF;AASD,CAxCO,CAAR","sourcesContent":["import { generateConfig } from './index';\n\ndescribe('backend/base', () => {\n  it('throws an error if a response object is supplied without passing through the middleware', () => {\n    expect(() => {\n      // @ts-ignore\n      generateConfig({ res: {} });\n    }).toThrow(\n      'The res.locals object is missing your project information. Have you implemented KojiBackend.middleware correctly?',\n    );\n  });\n\n  it('passes project details correctly from a res that has passed through the middleware', () => {\n    const { projectId, projectToken } = generateConfig({\n      // @ts-ignore\n      res: {\n        locals: {\n          KOJI_PROJECT_ID: 'testId',\n          KOJI_PROJECT_TOKEN: 'testToken',\n        },\n      },\n    });\n\n    expect(projectId).toBe('testId');\n    expect(projectToken).toBe('testToken');\n  });\n\n  it('throws an error if there is no response object and project details are not explicitly passed', () => {\n    expect(() => {\n      generateConfig({});\n    }).toThrow('Unable to find project details');\n  });\n\n  it('passes project details correctly from explicitly passed parameters', () => {\n    const { projectId, projectToken } = generateConfig({\n      projectId: 'testId',\n      projectToken: 'testToken',\n    });\n\n    expect(projectId).toBe('testId');\n    expect(projectToken).toBe('testToken');\n  });\n});\n"],"file":"index.spec.js"}