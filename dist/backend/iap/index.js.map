{"version":3,"sources":["../../../src/backend/iap/index.ts"],"names":["IapRoutes","IAP","config","rootPath","rootHeaders","projectId","projectToken","iapToken","axios","post","RESOLVE_RECEIPTS","headers","data","receipts","receiptId","RESOLVE_RECEIPT_BY_ID","receipt","sku","RESOLVE_RECEIPTS_BY_SKU","attributes","notificationMessage","UPDATE_RECEIPT","get","GET_PRODUCT_BY_SKU","product","Base","server"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;AAGA;AACA;AACA;IACYA,S;AAQZ;AACA;AACA;;;;WAVYA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;GAAAA,S,yBAAAA,S;;AAuBZ;AACA;AACA;AACA;IACaC,G;;;;;AAIX;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACE,eAAmBC,MAAnB,EAAsD;AAAA;;AAAA;AACpD,8BAAMA,MAAN;AADoD;AAAA;AAGpD,UAAKC,QAAL,GAAgB,6BAAhB;AAEA,UAAKC,WAAL,GAAmB;AACjB,2BAAqB,MAAKC,SADT;AAEjB,8BAAwB,MAAKC,YAFZ;AAGjB,sBAAgB;AAHC,KAAnB;AALoD;AAUrD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;sIAEyCC,Q;;;;;;;;uBACKC,kBAAMC,IAAN,WACrC,KAAKN,QADgC,SACrBH,SAAS,CAACU,gBADW,GAExC,EAFwC,EAGxC;AACEC,kBAAAA,OAAO,kCACF,KAAKP,WADH;AAEL,iDAA6BG;AAFxB;AADT,iBAHwC,C;;;;0DAAlCK,I,CAAQC,Q;AAAAA,gBAAAA,Q,sCAAW,E;iDAWpBA,Q;;;;;;;;;;;;;;;;AAGT;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;gIAEkCC,S;;;;;;;;uBACMN,kBAAMC,IAAN,WAAc,KAAKN,QAAnB,SAA8BH,SAAS,CAACe,qBAAxC,GAAiE;AAAED,kBAAAA,SAAS,EAATA;AAAF,iBAAjE,EAAgF;AAAEH,kBAAAA,OAAO,EAAE,KAAKP;AAAhB,iBAAhF,C;;;;AAApBY,gBAAAA,O,sBAARJ,I,CAAQI,O;kDAETA,O;;;;;;;;;;;;;;;;AAGT;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;kIAEoCC,G;;;;;;;;uBACKT,kBAAMC,IAAN,WAAc,KAAKN,QAAnB,SAA8BH,SAAS,CAACkB,uBAAxC,GAAmE;AAAED,kBAAAA,GAAG,EAAHA;AAAF,iBAAnE,EAA4E;AAAEN,kBAAAA,OAAO,EAAE,KAAKP;AAAhB,iBAA5E,C;;;;AAArBS,gBAAAA,Q,sBAARD,I,CAAQC,Q;kDAETA,Q;;;;;;;;;;;;;;;;AAGT;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;2HAC6BC,S,EAAmBK,U,EAAsCC,mB;;;;;;;;uBAC3DZ,kBAAMC,IAAN,WAClB,KAAKN,QADa,SACFH,SAAS,CAACqB,cADR,GAErB;AACEP,kBAAAA,SAAS,EAATA,SADF;AAEEK,kBAAAA,UAAU,EAAVA,UAFF;AAGEC,kBAAAA,mBAAmB,EAAnBA;AAHF,iBAFqB,EAOrB;AAAET,kBAAAA,OAAO,EAAE,KAAKP;AAAhB,iBAPqB,C;;;;AAAfQ,gBAAAA,I,sBAAAA,I;kDAUDA,I;;;;;;;;;;;;;;;;AAGT;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;yHAC2BK,G;;;;;;;;uBACaT,kBAAMc,GAAN,WAAa,KAAKnB,QAAlB,SAA6BH,SAAS,CAACuB,kBAAvC,oBAAmE,KAAKlB,SAAxE,kBAAyFY,GAAzF,GAAgG;AAAEN,kBAAAA,OAAO,EAAE,KAAKP;AAAhB,iBAAhG,C;;;;AAApBoB,gBAAAA,O,oBAARZ,I,CAAQY,O;kDAETA,O;;;;;;;;;;;;;;;;;;EAhIcC,U,uGAmCtBC,c,0LA2BAA,c,qLAkBAA,c","sourcesContent":["import axios from 'axios';\nimport { server } from '../@decorators/server';\nimport { Base, BackendConfigurationInput } from '../base';\nimport { IAPToken } from '../../types';\n\n/**\n * API routes for iap methods.\n */\nexport enum IapRoutes {\n  GET_PRODUCT_BY_SKU = '/v1/iap/provider/getProductBySku',\n  RESOLVE_RECEIPTS = '/v1/iap/consumer/resolveReceipts',\n  RESOLVE_RECEIPT_BY_ID = '/v1/iap/consumer/resolveReceiptById',\n  RESOLVE_RECEIPTS_BY_SKU = '/v1/iap/consumer/resolveReceiptsBySku',\n  UPDATE_RECEIPT = '/v1/iap/consumer/updateReceiptAttributes',\n}\n\n/**\n * Defines an interface for a receipt.\n */\nexport interface IapReceipt {\n  receiptId: string;\n  productId: string;\n  purchasedPrice: number;\n  attributes: { [index: string]: any };\n  transactionIds: {\n    credit: string;\n    debit: string;\n  };\n  datePurchased: Date;\n}\n\n/**\n * Implements in-app purchases for the backend of your Koji. For more information, see\n * [[https://developer.withkoji.com/reference/packages/withkoji-koji-iap-package | the in-app purchases package reference]].\n */\nexport class IAP extends Base {\n  private rootPath: string;\n  private rootHeaders: Object;\n\n  /**\n   * @param   config\n   *\n   * @example\n   * ```javascript\n   * const iap = new KojiBackend.IAP({ res });\n   * ```\n   */\n  public constructor(config: BackendConfigurationInput) {\n    super(config);\n\n    this.rootPath = 'https://rest.api.gokoji.com';\n\n    this.rootHeaders = {\n      'X-Koji-Project-Id': this.projectId,\n      'X-Koji-Project-Token': this.projectToken,\n      'Content-Type': 'application/json',\n    };\n  }\n\n  /**\n   * Get receipts by user token\n   *\n   * @param     authToken     User token.\n   * @return                  Array of receipts.\n   *\n   * @example\n   * ```javascript\n   * const receipts = iap.resolveReceiptsByUserToken(token);\n   * ```\n   */\n  @server\n  public async resolveReceiptsByIAPToken(iapToken: IAPToken): Promise<IapReceipt[]> {\n    const { data: { receipts = [] } } = await axios.post(\n      `${this.rootPath}${IapRoutes.RESOLVE_RECEIPTS}`,\n      {},\n      {\n        headers: {\n          ...this.rootHeaders,\n          'X-Koji-Iap-Callback-Token': iapToken,\n        },\n      },\n    );\n\n    return receipts;\n  }\n\n  /**\n   * Get receipts by receipt id\n   *\n   * @param     receiptId     Receipt id.\n   * @return                  Array of receipts.\n   *\n   * @example\n   * ```javascript\n   * const receipt = iap.resolveReceiptById(id);\n   * ```\n   */\n  @server\n  public async resolveReceiptById(receiptId: string): Promise<IapReceipt> {\n    const { data: { receipt } } = await axios.post(`${this.rootPath}${IapRoutes.RESOLVE_RECEIPT_BY_ID}`, { receiptId }, { headers: this.rootHeaders });\n\n    return receipt;\n  }\n\n  /**\n   * Get receipts for a product by sku\n   *\n   * @param     sku     Product sku.\n   * @return            Array of receipts that include the product.\n   *\n   * @example\n   * ```javascript\n   * const receipts = iap.resolveReceiptById(sku);\n   * ```\n   */\n  @server\n  public async resolveReceiptsBySku(sku: string): Promise<IapReceipt[]> {\n    const { data: { receipts } } = await axios.post(`${this.rootPath}${IapRoutes.RESOLVE_RECEIPTS_BY_SKU}`, { sku }, { headers: this.rootHeaders });\n\n    return receipts;\n  }\n\n  /**\n   * Update receipt\n   *\n   * @param     receiptId     Receipt id.\n   * @param     attributes    Array of receipt attributes.\n   * @param     notificationMessage    Optional notification message.\n   * @return                  Data object.\n   *\n   * @example\n   * ```javascript\n   * iap.updateReceipt(id, ['paid']);\n   * ```\n   */\n  public async updateReceipt(receiptId: string, attributes: { [index: string]: any }, notificationMessage?: string): Promise<any> {\n    const { data } = await axios.post(\n      `${this.rootPath}${IapRoutes.UPDATE_RECEIPT}`,\n      {\n        receiptId,\n        attributes,\n        notificationMessage,\n      },\n      { headers: this.rootHeaders },\n    );\n\n    return data;\n  }\n\n  /**\n   * Load product by sku.\n   *\n   * @param     sku     Product sku.\n   * @return            Data object.\n   *\n   * @example\n   * ```javascript\n   * iap.loadProduct(sku);\n   * ```\n   */\n  public async loadProduct(sku: string) {\n    const { data: { product } } = await axios.get(`${this.rootPath}${IapRoutes.GET_PRODUCT_BY_SKU}?appId=${this.projectId}&sku=${sku}`, { headers: this.rootHeaders });\n\n    return product;\n  }\n}\n\nexport interface IIAP extends IAP {}\n"],"file":"index.js"}